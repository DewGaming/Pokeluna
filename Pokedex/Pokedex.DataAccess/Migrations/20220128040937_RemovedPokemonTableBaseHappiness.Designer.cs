// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pokedex.DataAccess.Models;

namespace Pokedex.DataAccess.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220128040937_RemovedPokemonTableBaseHappiness")]
    partial class RemovedPokemonTableBaseHappiness
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Pokedex.DataAccess.Models.Ability", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<int>("GenerationId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.HasIndex("GenerationId");

                    b.ToTable("Abilities");
                });

            modelBuilder.Entity("Pokedex.DataAccess.Models.BaseHappiness", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte>("Happiness")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.ToTable("BaseHappiness");
                });

            modelBuilder.Entity("Pokedex.DataAccess.Models.BaseStat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<short>("Attack")
                        .HasColumnType("smallint");

                    b.Property<short>("Defense")
                        .HasColumnType("smallint");

                    b.Property<int>("GenerationId")
                        .HasColumnType("int");

                    b.Property<short>("Health")
                        .HasColumnType("smallint");

                    b.Property<int>("PokemonId")
                        .HasColumnType("int");

                    b.Property<short>("SpecialAttack")
                        .HasColumnType("smallint");

                    b.Property<short>("SpecialDefense")
                        .HasColumnType("smallint");

                    b.Property<short>("Speed")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("GenerationId");

                    b.HasIndex("PokemonId");

                    b.ToTable("BaseStats");
                });

            modelBuilder.Entity("Pokedex.DataAccess.Models.BattleItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GenerationId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<bool>("OnlyInThisGeneration")
                        .HasColumnType("bit");

                    b.Property<int?>("PokemonId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GenerationId");

                    b.HasIndex("PokemonId");

                    b.ToTable("BattleItems");
                });

            modelBuilder.Entity("Pokedex.DataAccess.Models.CaptureMethod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CaptureMethods");
                });

            modelBuilder.Entity("Pokedex.DataAccess.Models.CaptureRate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<short>("CatchRate")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.ToTable("CaptureRates");
                });

            modelBuilder.Entity("Pokedex.DataAccess.Models.Classification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.HasKey("Id");

                    b.ToTable("Classifications");
                });

            modelBuilder.Entity("Pokedex.DataAccess.Models.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("CommentorId")
                        .HasColumnType("int");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherPage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PageId")
                        .HasColumnType("int");

                    b.Property<string>("PokemonName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CommentorId");

                    b.HasIndex("PageId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("Pokedex.DataAccess.Models.CommentCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CommentCategories");
                });

            modelBuilder.Entity("Pokedex.DataAccess.Models.CommentPage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CommentPages");
                });

            modelBuilder.Entity("Pokedex.DataAccess.Models.EVYield", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<short>("Attack")
                        .HasColumnType("smallint");

                    b.Property<short>("Defense")
                        .HasColumnType("smallint");

                    b.Property<int>("GenerationId")
                        .HasColumnType("int");

                    b.Property<short>("Health")
                        .HasColumnType("smallint");

                    b.Property<int>("PokemonId")
                        .HasColumnType("int");

                    b.Property<short>("SpecialAttack")
                        .HasColumnType("smallint");

                    b.Property<short>("SpecialDefense")
                        .HasColumnType("smallint");

                    b.Property<short>("Speed")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("GenerationId");

                    b.HasIndex("PokemonId");

                    b.ToTable("EVYields");
                });

            modelBuilder.Entity("Pokedex.DataAccess.Models.EggCycle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<short>("CycleCount")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.ToTable("EggCycles");
                });

            modelBuilder.Entity("Pokedex.DataAccess.Models.EggGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.HasKey("Id");

                    b.ToTable("EggGroups");
                });

            modelBuilder.Entity("Pokedex.DataAccess.Models.Evolution", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EvolutionDetails")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("EvolutionMethodId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int>("EvolutionPokemonId")
                        .HasColumnType("int");

                    b.Property<int>("GenerationId")
                        .HasColumnType("int");

                    b.Property<int>("PreevolutionPokemonId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EvolutionMethodId");

                    b.HasIndex("EvolutionPokemonId");

                    b.HasIndex("GenerationId");

                    b.HasIndex("PreevolutionPokemonId");

                    b.ToTable("Evolutions");
                });

            modelBuilder.Entity("Pokedex.DataAccess.Models.EvolutionMethod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("EvolutionMethods");
                });

            modelBuilder.Entity("Pokedex.DataAccess.Models.ExperienceGrowth", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ExpPointTotal")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.HasKey("Id");

                    b.ToTable("ExperienceGrowths");
                });

            modelBuilder.Entity("Pokedex.DataAccess.Models.Form", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Catchable")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<bool>("NeedsItem")
                        .HasColumnType("bit");

                    b.Property<bool>("Randomizable")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Forms");
                });

            modelBuilder.Entity("Pokedex.DataAccess.Models.FormItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int>("PokemonId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PokemonId");

                    b.ToTable("FormItems");
                });

            modelBuilder.Entity("Pokedex.DataAccess.Models.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Abbreviation")
                        .IsRequired()
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.Property<int>("GenerationId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("GenerationId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("Pokedex.DataAccess.Models.GameRegionDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.Property<int>("RegionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.HasIndex("RegionId");

                    b.ToTable("GameRegionDetails");
                });

            modelBuilder.Entity("Pokedex.DataAccess.Models.GenderRatio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("FemaleRatio")
                        .HasColumnType("float");

                    b.Property<double>("MaleRatio")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("GenderRatios");
                });

            modelBuilder.Entity("Pokedex.DataAccess.Models.Generation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("Generations");
                });

            modelBuilder.Entity("Pokedex.DataAccess.Models.LegendaryType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("LegendaryTypes");
                });

            modelBuilder.Entity("Pokedex.DataAccess.Models.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RegionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RegionId");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("Pokedex.DataAccess.Models.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<string>("MessageContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("MessageTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<int?>("ReceiverId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("SenderId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ReceiverId");

                    b.HasIndex("SenderId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("Pokedex.DataAccess.Models.Nature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.HasKey("Id");

                    b.ToTable("Natures");
                });

            modelBuilder.Entity("Pokedex.DataAccess.Models.PageStat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("VisitDate")
                        .HasColumnType("Date");

                    b.Property<DateTime>("VisitTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("PageStats");
                });

            modelBuilder.Entity("Pokedex.DataAccess.Models.Pokeball", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GenerationId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.HasIndex("GenerationId");

                    b.ToTable("Pokeballs");
                });

            modelBuilder.Entity("Pokedex.DataAccess.Models.PokeballCatchModifierDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CatchModifier")
                        .HasColumnType("float");

                    b.Property<string>("Effect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PokeballId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PokeballId");

                    b.ToTable("PokeballCatchModifierDetails");
                });

            modelBuilder.Entity("Pokedex.DataAccess.Models.Pokemon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClassificationId")
                        .HasColumnType("int");

                    b.Property<int>("EggCycleId")
                        .HasColumnType("int");

                    b.Property<int>("ExperienceGrowthId")
                        .HasColumnType("int");

                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.Property<int>("GenderRatioId")
                        .HasColumnType("int");

                    b.Property<decimal>("Height")
                        .HasColumnType("decimal(4,1)");

                    b.Property<bool>("IsComplete")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<int>("PokedexNumber")
                        .HasColumnType("int");

                    b.Property<string>("Pronunciation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(4,1)");

                    b.HasKey("Id");

                    b.HasIndex("ClassificationId");

                    b.HasIndex("EggCycleId");

                    b.HasIndex("ExperienceGrowthId");

                    b.HasIndex("GameId");

                    b.HasIndex("GenderRatioId");

                    b.ToTable("Pokemon");
                });

            modelBuilder.Entity("Pokedex.DataAccess.Models.PokemonAbilityDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GenerationId")
                        .HasColumnType("int");

                    b.Property<int?>("HiddenAbilityId")
                        .HasColumnType("int");

                    b.Property<int>("PokemonId")
                        .HasColumnType("int");

                    b.Property<int?>("PrimaryAbilityId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("SecondaryAbilityId")
                        .HasColumnType("int");

                    b.Property<int?>("SpecialEventAbilityId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GenerationId");

                    b.HasIndex("HiddenAbilityId");

                    b.HasIndex("PokemonId");

                    b.HasIndex("PrimaryAbilityId");

                    b.HasIndex("SecondaryAbilityId");

                    b.HasIndex("SpecialEventAbilityId");

                    b.ToTable("PokemonAbilityDetails");
                });

            modelBuilder.Entity("Pokedex.DataAccess.Models.PokemonBaseHappinessDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BaseHappinessId")
                        .HasColumnType("int");

                    b.Property<int>("GenerationId")
                        .HasColumnType("int");

                    b.Property<int>("PokemonId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BaseHappinessId");

                    b.HasIndex("GenerationId");

                    b.HasIndex("PokemonId");

                    b.ToTable("PokemonBaseHappinessDetails");
                });

            modelBuilder.Entity("Pokedex.DataAccess.Models.PokemonCaptureRateDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CaptureRateId")
                        .HasColumnType("int");

                    b.Property<int>("GenerationId")
                        .HasColumnType("int");

                    b.Property<int>("PokemonId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CaptureRateId");

                    b.HasIndex("GenerationId");

                    b.HasIndex("PokemonId");

                    b.ToTable("PokemonCaptureRateDetails");
                });

            modelBuilder.Entity("Pokedex.DataAccess.Models.PokemonEggGroupDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GenerationId")
                        .HasColumnType("int");

                    b.Property<int>("PokemonId")
                        .HasColumnType("int");

                    b.Property<int?>("PrimaryEggGroupId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("SecondaryEggGroupId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GenerationId");

                    b.HasIndex("PokemonId");

                    b.HasIndex("PrimaryEggGroupId");

                    b.HasIndex("SecondaryEggGroupId");

                    b.ToTable("PokemonEggGroupDetails");
                });

            modelBuilder.Entity("Pokedex.DataAccess.Models.PokemonFormDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AltFormPokemonId")
                        .HasColumnType("int");

                    b.Property<int>("FormId")
                        .HasColumnType("int");

                    b.Property<int>("OriginalPokemonId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AltFormPokemonId");

                    b.HasIndex("FormId");

                    b.HasIndex("OriginalPokemonId");

                    b.ToTable("PokemonFormDetails");
                });

            modelBuilder.Entity("Pokedex.DataAccess.Models.PokemonGameDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.Property<int>("PokemonId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.HasIndex("PokemonId");

                    b.ToTable("PokemonGameDetails");
                });

            modelBuilder.Entity("Pokedex.DataAccess.Models.PokemonLegendaryDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("LegendaryTypeId")
                        .HasColumnType("int");

                    b.Property<int>("PokemonId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LegendaryTypeId");

                    b.HasIndex("PokemonId");

                    b.ToTable("PokemonLegendaryDetails");
                });

            modelBuilder.Entity("Pokedex.DataAccess.Models.PokemonLocationDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CaptureMethodId")
                        .HasColumnType("int");

                    b.Property<double>("ChanceOfEncounter")
                        .HasColumnType("float");

                    b.Property<bool>("FailedSnag")
                        .HasColumnType("bit");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<int>("MaximumLevel")
                        .HasColumnType("int");

                    b.Property<int>("MinimumLevel")
                        .HasColumnType("int");

                    b.Property<int>("PokemonId")
                        .HasColumnType("int");

                    b.Property<bool>("SOSBattleOnly")
                        .HasColumnType("bit");

                    b.Property<bool>("SpecialSpawn")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CaptureMethodId");

                    b.HasIndex("LocationId");

                    b.HasIndex("PokemonId");

                    b.ToTable("PokemonLocationDetails");
                });

            modelBuilder.Entity("Pokedex.DataAccess.Models.PokemonLocationGameDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.Property<int>("PokemonLocationDetailId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.HasIndex("PokemonLocationDetailId");

                    b.ToTable("PokemonLocationGameDetails");
                });

            modelBuilder.Entity("Pokedex.DataAccess.Models.PokemonLocationSeasonDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PokemonLocationDetailId")
                        .HasColumnType("int");

                    b.Property<int>("SeasonId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PokemonLocationDetailId");

                    b.HasIndex("SeasonId");

                    b.ToTable("PokemonLocationSeasonDetails");
                });

            modelBuilder.Entity("Pokedex.DataAccess.Models.PokemonLocationTimeDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PokemonLocationDetailId")
                        .HasColumnType("int");

                    b.Property<int>("TimeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PokemonLocationDetailId");

                    b.HasIndex("TimeId");

                    b.ToTable("PokemonLocationTimeDetails");
                });

            modelBuilder.Entity("Pokedex.DataAccess.Models.PokemonLocationWeatherDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PokemonLocationDetailId")
                        .HasColumnType("int");

                    b.Property<int>("WeatherId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PokemonLocationDetailId");

                    b.HasIndex("WeatherId");

                    b.ToTable("PokemonLocationWeatherDetails");
                });

            modelBuilder.Entity("Pokedex.DataAccess.Models.PokemonTeam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("FifthPokemonId")
                        .HasColumnType("int");

                    b.Property<int?>("FirstPokemonId")
                        .HasColumnType("int");

                    b.Property<int?>("FourthPokemonId")
                        .HasColumnType("int");

                    b.Property<int?>("GameId")
                        .HasColumnType("int");

                    b.Property<string>("PokemonTeamName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SecondPokemonId")
                        .HasColumnType("int");

                    b.Property<int?>("SixthPokemonId")
                        .HasColumnType("int");

                    b.Property<int?>("ThirdPokemonId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FifthPokemonId");

                    b.HasIndex("FirstPokemonId");

                    b.HasIndex("FourthPokemonId");

                    b.HasIndex("GameId");

                    b.HasIndex("SecondPokemonId");

                    b.HasIndex("SixthPokemonId");

                    b.HasIndex("ThirdPokemonId");

                    b.HasIndex("UserId");

                    b.ToTable("PokemonTeams");
                });

            modelBuilder.Entity("Pokedex.DataAccess.Models.PokemonTeamDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AbilityId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("BattleItemId")
                        .HasColumnType("int");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(6)")
                        .HasMaxLength(6);

                    b.Property<byte>("Happiness")
                        .HasColumnType("tinyint");

                    b.Property<bool>("IsShiny")
                        .HasColumnType("bit");

                    b.Property<byte>("Level")
                        .HasColumnType("tinyint");

                    b.Property<int?>("NatureId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Nickname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PokemonId")
                        .HasColumnType("int");

                    b.Property<int?>("PokemonTeamEVId")
                        .HasColumnType("int");

                    b.Property<int?>("PokemonTeamIVId")
                        .HasColumnType("int");

                    b.Property<int?>("PokemonTeamMovesetId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AbilityId");

                    b.HasIndex("BattleItemId");

                    b.HasIndex("NatureId");

                    b.HasIndex("PokemonId");

                    b.HasIndex("PokemonTeamEVId");

                    b.HasIndex("PokemonTeamIVId");

                    b.HasIndex("PokemonTeamMovesetId");

                    b.ToTable("PokemonTeamDetails");
                });

            modelBuilder.Entity("Pokedex.DataAccess.Models.PokemonTeamEV", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte>("Attack")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Defense")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Health")
                        .HasColumnType("tinyint");

                    b.Property<byte>("SpecialAttack")
                        .HasColumnType("tinyint");

                    b.Property<byte>("SpecialDefense")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Speed")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.ToTable("PokemonTeamEVs");
                });

            modelBuilder.Entity("Pokedex.DataAccess.Models.PokemonTeamIV", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte>("Attack")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Defense")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Health")
                        .HasColumnType("tinyint");

                    b.Property<byte>("SpecialAttack")
                        .HasColumnType("tinyint");

                    b.Property<byte>("SpecialDefense")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Speed")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.ToTable("PokemonTeamIVs");
                });

            modelBuilder.Entity("Pokedex.DataAccess.Models.PokemonTeamMoveset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstMove")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FourthMove")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecondMove")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThirdMove")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PokemonTeamMovesets");
                });

            modelBuilder.Entity("Pokedex.DataAccess.Models.PokemonTypeDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GenerationId")
                        .HasColumnType("int");

                    b.Property<int>("PokemonId")
                        .HasColumnType("int");

                    b.Property<int?>("PrimaryTypeId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("SecondaryTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GenerationId");

                    b.HasIndex("PokemonId");

                    b.HasIndex("PrimaryTypeId");

                    b.HasIndex("SecondaryTypeId");

                    b.ToTable("PokemonTypeDetails");
                });

            modelBuilder.Entity("Pokedex.DataAccess.Models.Region", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GenerationId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.HasKey("Id");

                    b.HasIndex("GenerationId");

                    b.ToTable("Regions");
                });

            modelBuilder.Entity("Pokedex.DataAccess.Models.ReviewedPokemon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PokemonId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PokemonId");

                    b.ToTable("ReviewedPokemons");
                });

            modelBuilder.Entity("Pokedex.DataAccess.Models.Season", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Seasons");
                });

            modelBuilder.Entity("Pokedex.DataAccess.Models.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("Effect")
                        .HasColumnType("real");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Statuses");
                });

            modelBuilder.Entity("Pokedex.DataAccess.Models.Time", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Times");
                });

            modelBuilder.Entity("Pokedex.DataAccess.Models.Type", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GenerationId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.HasKey("Id");

                    b.HasIndex("GenerationId");

                    b.ToTable("Types");
                });

            modelBuilder.Entity("Pokedex.DataAccess.Models.TypeChart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AttackId")
                        .HasColumnType("int");

                    b.Property<int>("DefendId")
                        .HasColumnType("int");

                    b.Property<decimal>("Effective")
                        .HasColumnType("decimal(2,1)");

                    b.Property<int>("GenerationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AttackId");

                    b.HasIndex("DefendId");

                    b.HasIndex("GenerationId");

                    b.ToTable("TypeCharts");
                });

            modelBuilder.Entity("Pokedex.DataAccess.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOwner")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastVisit")
                        .HasColumnType("datetime2");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Pokedex.DataAccess.Models.Weather", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Weathers");
                });

            modelBuilder.Entity("Pokedex.DataAccess.Models.Ability", b =>
                {
                    b.HasOne("Pokedex.DataAccess.Models.Generation", "Generation")
                        .WithMany()
                        .HasForeignKey("GenerationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Pokedex.DataAccess.Models.BaseStat", b =>
                {
                    b.HasOne("Pokedex.DataAccess.Models.Generation", "Generation")
                        .WithMany()
                        .HasForeignKey("GenerationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Pokedex.DataAccess.Models.Pokemon", "Pokemon")
                        .WithMany()
                        .HasForeignKey("PokemonId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Pokedex.DataAccess.Models.BattleItem", b =>
                {
                    b.HasOne("Pokedex.DataAccess.Models.Generation", "Generation")
                        .WithMany()
                        .HasForeignKey("GenerationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Pokedex.DataAccess.Models.Pokemon", "Pokemon")
                        .WithMany()
                        .HasForeignKey("PokemonId");
                });

            modelBuilder.Entity("Pokedex.DataAccess.Models.Comment", b =>
                {
                    b.HasOne("Pokedex.DataAccess.Models.CommentCategory", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Pokedex.DataAccess.Models.User", "Commentor")
                        .WithMany()
                        .HasForeignKey("CommentorId");

                    b.HasOne("Pokedex.DataAccess.Models.CommentPage", "Page")
                        .WithMany()
                        .HasForeignKey("PageId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Pokedex.DataAccess.Models.EVYield", b =>
                {
                    b.HasOne("Pokedex.DataAccess.Models.Generation", "Generation")
                        .WithMany()
                        .HasForeignKey("GenerationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Pokedex.DataAccess.Models.Pokemon", "Pokemon")
                        .WithMany()
                        .HasForeignKey("PokemonId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Pokedex.DataAccess.Models.Evolution", b =>
                {
                    b.HasOne("Pokedex.DataAccess.Models.EvolutionMethod", "EvolutionMethod")
                        .WithMany()
                        .HasForeignKey("EvolutionMethodId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Pokedex.DataAccess.Models.Pokemon", "EvolutionPokemon")
                        .WithMany()
                        .HasForeignKey("EvolutionPokemonId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Pokedex.DataAccess.Models.Generation", "Generation")
                        .WithMany()
                        .HasForeignKey("GenerationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Pokedex.DataAccess.Models.Pokemon", "PreevolutionPokemon")
                        .WithMany()
                        .HasForeignKey("PreevolutionPokemonId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Pokedex.DataAccess.Models.FormItem", b =>
                {
                    b.HasOne("Pokedex.DataAccess.Models.Pokemon", "Pokemon")
                        .WithMany()
                        .HasForeignKey("PokemonId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Pokedex.DataAccess.Models.Game", b =>
                {
                    b.HasOne("Pokedex.DataAccess.Models.Generation", "Generation")
                        .WithMany()
                        .HasForeignKey("GenerationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Pokedex.DataAccess.Models.GameRegionDetail", b =>
                {
                    b.HasOne("Pokedex.DataAccess.Models.Game", "Game")
                        .WithMany()
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Pokedex.DataAccess.Models.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Pokedex.DataAccess.Models.Location", b =>
                {
                    b.HasOne("Pokedex.DataAccess.Models.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Pokedex.DataAccess.Models.Message", b =>
                {
                    b.HasOne("Pokedex.DataAccess.Models.User", "Receiver")
                        .WithMany()
                        .HasForeignKey("ReceiverId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Pokedex.DataAccess.Models.User", "Sender")
                        .WithMany()
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Pokedex.DataAccess.Models.Pokeball", b =>
                {
                    b.HasOne("Pokedex.DataAccess.Models.Generation", "Generation")
                        .WithMany()
                        .HasForeignKey("GenerationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Pokedex.DataAccess.Models.PokeballCatchModifierDetail", b =>
                {
                    b.HasOne("Pokedex.DataAccess.Models.Pokeball", "Pokeball")
                        .WithMany()
                        .HasForeignKey("PokeballId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Pokedex.DataAccess.Models.Pokemon", b =>
                {
                    b.HasOne("Pokedex.DataAccess.Models.Classification", "Classification")
                        .WithMany()
                        .HasForeignKey("ClassificationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Pokedex.DataAccess.Models.EggCycle", "EggCycle")
                        .WithMany()
                        .HasForeignKey("EggCycleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Pokedex.DataAccess.Models.ExperienceGrowth", "ExperienceGrowth")
                        .WithMany()
                        .HasForeignKey("ExperienceGrowthId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Pokedex.DataAccess.Models.Game", "Game")
                        .WithMany()
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Pokedex.DataAccess.Models.GenderRatio", "GenderRatio")
                        .WithMany()
                        .HasForeignKey("GenderRatioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Pokedex.DataAccess.Models.PokemonAbilityDetail", b =>
                {
                    b.HasOne("Pokedex.DataAccess.Models.Generation", "Generation")
                        .WithMany()
                        .HasForeignKey("GenerationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Pokedex.DataAccess.Models.Ability", "HiddenAbility")
                        .WithMany()
                        .HasForeignKey("HiddenAbilityId");

                    b.HasOne("Pokedex.DataAccess.Models.Pokemon", "Pokemon")
                        .WithMany()
                        .HasForeignKey("PokemonId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Pokedex.DataAccess.Models.Ability", "PrimaryAbility")
                        .WithMany()
                        .HasForeignKey("PrimaryAbilityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Pokedex.DataAccess.Models.Ability", "SecondaryAbility")
                        .WithMany()
                        .HasForeignKey("SecondaryAbilityId");

                    b.HasOne("Pokedex.DataAccess.Models.Ability", "SpecialEventAbility")
                        .WithMany()
                        .HasForeignKey("SpecialEventAbilityId");
                });

            modelBuilder.Entity("Pokedex.DataAccess.Models.PokemonBaseHappinessDetail", b =>
                {
                    b.HasOne("Pokedex.DataAccess.Models.BaseHappiness", "BaseHappiness")
                        .WithMany()
                        .HasForeignKey("BaseHappinessId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Pokedex.DataAccess.Models.Generation", "Generation")
                        .WithMany()
                        .HasForeignKey("GenerationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Pokedex.DataAccess.Models.Pokemon", "Pokemon")
                        .WithMany()
                        .HasForeignKey("PokemonId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Pokedex.DataAccess.Models.PokemonCaptureRateDetail", b =>
                {
                    b.HasOne("Pokedex.DataAccess.Models.CaptureRate", "CaptureRate")
                        .WithMany()
                        .HasForeignKey("CaptureRateId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Pokedex.DataAccess.Models.Generation", "Generation")
                        .WithMany()
                        .HasForeignKey("GenerationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Pokedex.DataAccess.Models.Pokemon", "Pokemon")
                        .WithMany()
                        .HasForeignKey("PokemonId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Pokedex.DataAccess.Models.PokemonEggGroupDetail", b =>
                {
                    b.HasOne("Pokedex.DataAccess.Models.Generation", "Generation")
                        .WithMany()
                        .HasForeignKey("GenerationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Pokedex.DataAccess.Models.Pokemon", "Pokemon")
                        .WithMany()
                        .HasForeignKey("PokemonId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Pokedex.DataAccess.Models.EggGroup", "PrimaryEggGroup")
                        .WithMany()
                        .HasForeignKey("PrimaryEggGroupId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Pokedex.DataAccess.Models.EggGroup", "SecondaryEggGroup")
                        .WithMany()
                        .HasForeignKey("SecondaryEggGroupId");
                });

            modelBuilder.Entity("Pokedex.DataAccess.Models.PokemonFormDetail", b =>
                {
                    b.HasOne("Pokedex.DataAccess.Models.Pokemon", "AltFormPokemon")
                        .WithMany()
                        .HasForeignKey("AltFormPokemonId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Pokedex.DataAccess.Models.Form", "Form")
                        .WithMany()
                        .HasForeignKey("FormId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Pokedex.DataAccess.Models.Pokemon", "OriginalPokemon")
                        .WithMany()
                        .HasForeignKey("OriginalPokemonId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Pokedex.DataAccess.Models.PokemonGameDetail", b =>
                {
                    b.HasOne("Pokedex.DataAccess.Models.Game", "Game")
                        .WithMany()
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Pokedex.DataAccess.Models.Pokemon", "Pokemon")
                        .WithMany()
                        .HasForeignKey("PokemonId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Pokedex.DataAccess.Models.PokemonLegendaryDetail", b =>
                {
                    b.HasOne("Pokedex.DataAccess.Models.LegendaryType", "LegendaryType")
                        .WithMany()
                        .HasForeignKey("LegendaryTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Pokedex.DataAccess.Models.Pokemon", "Pokemon")
                        .WithMany()
                        .HasForeignKey("PokemonId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Pokedex.DataAccess.Models.PokemonLocationDetail", b =>
                {
                    b.HasOne("Pokedex.DataAccess.Models.CaptureMethod", "CaptureMethod")
                        .WithMany()
                        .HasForeignKey("CaptureMethodId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Pokedex.DataAccess.Models.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Pokedex.DataAccess.Models.Pokemon", "Pokemon")
                        .WithMany()
                        .HasForeignKey("PokemonId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Pokedex.DataAccess.Models.PokemonLocationGameDetail", b =>
                {
                    b.HasOne("Pokedex.DataAccess.Models.Game", "Game")
                        .WithMany()
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Pokedex.DataAccess.Models.PokemonLocationDetail", "PokemonLocationDetail")
                        .WithMany()
                        .HasForeignKey("PokemonLocationDetailId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Pokedex.DataAccess.Models.PokemonLocationSeasonDetail", b =>
                {
                    b.HasOne("Pokedex.DataAccess.Models.PokemonLocationDetail", "PokemonLocationDetail")
                        .WithMany()
                        .HasForeignKey("PokemonLocationDetailId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Pokedex.DataAccess.Models.Season", "Season")
                        .WithMany()
                        .HasForeignKey("SeasonId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Pokedex.DataAccess.Models.PokemonLocationTimeDetail", b =>
                {
                    b.HasOne("Pokedex.DataAccess.Models.PokemonLocationDetail", "PokemonLocationDetail")
                        .WithMany()
                        .HasForeignKey("PokemonLocationDetailId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Pokedex.DataAccess.Models.Time", "Time")
                        .WithMany()
                        .HasForeignKey("TimeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Pokedex.DataAccess.Models.PokemonLocationWeatherDetail", b =>
                {
                    b.HasOne("Pokedex.DataAccess.Models.PokemonLocationDetail", "PokemonLocationDetail")
                        .WithMany()
                        .HasForeignKey("PokemonLocationDetailId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Pokedex.DataAccess.Models.Weather", "Weather")
                        .WithMany()
                        .HasForeignKey("WeatherId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Pokedex.DataAccess.Models.PokemonTeam", b =>
                {
                    b.HasOne("Pokedex.DataAccess.Models.PokemonTeamDetail", "FifthPokemon")
                        .WithMany()
                        .HasForeignKey("FifthPokemonId");

                    b.HasOne("Pokedex.DataAccess.Models.PokemonTeamDetail", "FirstPokemon")
                        .WithMany()
                        .HasForeignKey("FirstPokemonId");

                    b.HasOne("Pokedex.DataAccess.Models.PokemonTeamDetail", "FourthPokemon")
                        .WithMany()
                        .HasForeignKey("FourthPokemonId");

                    b.HasOne("Pokedex.DataAccess.Models.Game", "Game")
                        .WithMany()
                        .HasForeignKey("GameId");

                    b.HasOne("Pokedex.DataAccess.Models.PokemonTeamDetail", "SecondPokemon")
                        .WithMany()
                        .HasForeignKey("SecondPokemonId");

                    b.HasOne("Pokedex.DataAccess.Models.PokemonTeamDetail", "SixthPokemon")
                        .WithMany()
                        .HasForeignKey("SixthPokemonId");

                    b.HasOne("Pokedex.DataAccess.Models.PokemonTeamDetail", "ThirdPokemon")
                        .WithMany()
                        .HasForeignKey("ThirdPokemonId");

                    b.HasOne("Pokedex.DataAccess.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Pokedex.DataAccess.Models.PokemonTeamDetail", b =>
                {
                    b.HasOne("Pokedex.DataAccess.Models.Ability", "Ability")
                        .WithMany()
                        .HasForeignKey("AbilityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Pokedex.DataAccess.Models.BattleItem", "BattleItem")
                        .WithMany()
                        .HasForeignKey("BattleItemId");

                    b.HasOne("Pokedex.DataAccess.Models.Nature", "Nature")
                        .WithMany()
                        .HasForeignKey("NatureId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Pokedex.DataAccess.Models.Pokemon", "Pokemon")
                        .WithMany()
                        .HasForeignKey("PokemonId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Pokedex.DataAccess.Models.PokemonTeamEV", "PokemonTeamEV")
                        .WithMany()
                        .HasForeignKey("PokemonTeamEVId");

                    b.HasOne("Pokedex.DataAccess.Models.PokemonTeamIV", "PokemonTeamIV")
                        .WithMany()
                        .HasForeignKey("PokemonTeamIVId");

                    b.HasOne("Pokedex.DataAccess.Models.PokemonTeamMoveset", "PokemonTeamMoveset")
                        .WithMany()
                        .HasForeignKey("PokemonTeamMovesetId");
                });

            modelBuilder.Entity("Pokedex.DataAccess.Models.PokemonTypeDetail", b =>
                {
                    b.HasOne("Pokedex.DataAccess.Models.Generation", "Generation")
                        .WithMany()
                        .HasForeignKey("GenerationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Pokedex.DataAccess.Models.Pokemon", "Pokemon")
                        .WithMany()
                        .HasForeignKey("PokemonId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Pokedex.DataAccess.Models.Type", "PrimaryType")
                        .WithMany()
                        .HasForeignKey("PrimaryTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Pokedex.DataAccess.Models.Type", "SecondaryType")
                        .WithMany()
                        .HasForeignKey("SecondaryTypeId");
                });

            modelBuilder.Entity("Pokedex.DataAccess.Models.Region", b =>
                {
                    b.HasOne("Pokedex.DataAccess.Models.Generation", "Generation")
                        .WithMany()
                        .HasForeignKey("GenerationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Pokedex.DataAccess.Models.ReviewedPokemon", b =>
                {
                    b.HasOne("Pokedex.DataAccess.Models.Pokemon", "Pokemon")
                        .WithMany()
                        .HasForeignKey("PokemonId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Pokedex.DataAccess.Models.Type", b =>
                {
                    b.HasOne("Pokedex.DataAccess.Models.Generation", "Generation")
                        .WithMany()
                        .HasForeignKey("GenerationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Pokedex.DataAccess.Models.TypeChart", b =>
                {
                    b.HasOne("Pokedex.DataAccess.Models.Type", "Attack")
                        .WithMany()
                        .HasForeignKey("AttackId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Pokedex.DataAccess.Models.Type", "Defend")
                        .WithMany()
                        .HasForeignKey("DefendId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Pokedex.DataAccess.Models.Generation", "Generation")
                        .WithMany()
                        .HasForeignKey("GenerationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
