@model Pokedex.Models.GameViewModel

@section styles
{
    <style>
        .regionList {
            display: inline-block;
            border: solid #343a40 1px;
            overflow: hidden;
        }

        #RegionIds {
            overflow: hidden;
            padding: 10px;
            border: none;
            width: 100%;
        }
    </style>
}

@section scripts
{
    <script>
        $(document).ready(function() {
            var releaseDate = $('#ReleaseDate').attr('value');
            var d = new Date(releaseDate);
            var day = d.getDate();
            var month = d.getMonth() + 1;
            var year = d.getFullYear();
            if (day < 10) {
                day = "0" + day;
            }
            if (month < 10) {
                month = "0" + month;
            }
            var date = year + "-" + month + "-" + day;

            $('#ReleaseDate').val(date);
        });
    </script>
}

<h2>Update Game</h2>

<div class="form-horizontal">

    @using (Html.BeginForm())
    {      
        @Html.AntiForgeryToken()
          
        @Html.HiddenFor(x => x.Id)

        @Html.ValidationSummary()

        <div class="form-group row">
            @Html.LabelFor(x => x.Name, new { @class = "col-md-2" })
            @Html.EditorFor(x => x.Name, new { htmlAttributes = new { @autocomplete = "off", @class = "form-control col-md-8" } })
            @Html.ValidationMessageFor(x => x.Name)
        </div>

        <div class="form-group row">
            @Html.LabelFor(x => x.ReleaseDate, new { @class = "col-md-2" })
            @Html.TextBoxFor(x => x.ReleaseDate, new { @class = "form-control col-md-8", @type = "date" })
            @Html.ValidationMessageFor(x => x.ReleaseDate)
        </div>

        <div class="form-group row">
            @Html.LabelFor(x => x.GenerationId, new { @class = "col-md-2" })
            @Html.DropDownListFor(x => x.GenerationId, new SelectList(Model.AllGenerations, "Id", "GenerationName"), "", new { @class = "form-control col-md-8" })
            @Html.ValidationMessageFor(x => x.GenerationId)
        </div>

        <div class="form-group row">
            @Html.LabelFor(x => x.IsBreedingPossible, new { @class = "col-md-2" })
            @Html.EditorFor(x => x.IsBreedingPossible, new { htmlAttributes = new { @autocomplete = "off", @class = "form-control col-md-8" } })
            @Html.ValidationMessageFor(x => x.IsBreedingPossible)
        </div>

        <div class="form-group regionList">
            @Html.Label("Regions", "", new { @class = "col-md-2" })
            @Html.ListBoxFor(x => x.RegionIds, new SelectList(Model.AllRegions, "Id", "Name"), new { size = Model.AllRegions.Count(), htmlAttributes = new { @autocomplete = "off", @class = "form-control col-md-8" } })
        </div>

        <div class="form-group row colorPicker">
            @Html.LabelFor(x => x.GameColor, new { @class = "col-md-2" })
            @Html.TextBoxFor(x => x.GameColor, new { @class="form-control col-md-8", @type="color"})
        </div>

        <p>
            <button type="submit" class="btn btn-primary" role="button">Save</button>
        </p>
    }

</div>