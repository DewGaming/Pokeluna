@model Pokedex.Models.FormModelViewModel

<h2>Update Form</h2>

<div class="form-horizontal">

    @using (Html.BeginForm())
    {    
        @Html.AntiForgeryToken()
            
        @Html.HiddenFor(x => x.Id)

        @Html.ValidationSummary()

        <div class="form-group row">
            @Html.LabelFor(x => x.Name, new { @class = "col-md-2" })
            @Html.EditorFor(x => x.Name, new { htmlAttributes = new { @autocomplete = "off", @class = "form-control col-md-8" } })
            @Html.ValidationMessageFor(x => x.Name)
        </div>

        <div class="form-group row">
            @Html.LabelFor(x => x.Randomizable, new { @class = "col-md-2" })
            @Html.EditorFor(x => x.Randomizable, new { htmlAttributes = new { @autocomplete = "off", @class = "form-control col-md-8" } })
            @Html.ValidationMessageFor(x => x.Randomizable)
        </div>

        <div class="form-group row">
            @Html.LabelFor(x => x.FormGroupId, new { @class = "col-md-3" })
            @Html.DropDownListFor(x => x.FormGroupId, new SelectList(Model.AllFormGroups, "Id", "Name"), string.Empty, new { @class = "form-control col-md-8" })
            @Html.ValidationMessageFor(x => x.FormGroupId)
        </div>

        <div class="form-group row">
            @Html.LabelFor(x => x.NeedsItem, new { @class = "col-md-2" })
            @Html.EditorFor(x => x.NeedsItem, new { htmlAttributes = new { @autocomplete = "off", @class = "form-control col-md-8" } })
            @Html.ValidationMessageFor(x => x.NeedsItem)
        </div>

        <div class="form-group row">
            @Html.LabelFor(x => x.OnlyDuringBattle, new { @class = "col-md-2" })
            @Html.EditorFor(x => x.OnlyDuringBattle, new { htmlAttributes = new { @autocomplete = "off", @class = "form-control col-md-8" } })
            @Html.ValidationMessageFor(x => x.OnlyDuringBattle)
        </div>

        <div class="form-group row">
            @Html.LabelFor(x => x.FusionForm, new { @class = "col-md-2" })
            @Html.EditorFor(x => x.FusionForm, new { htmlAttributes = new { @autocomplete = "off", @class = "form-control col-md-8" } })
            @Html.ValidationMessageFor(x => x.FusionForm)
        </div>

        <p>
            <button type="submit" class="btn btn-primary" role="button">Save</button>
        </p>
    }

</div>