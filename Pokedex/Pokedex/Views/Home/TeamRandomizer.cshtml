@model Pokedex.Models.TeamRandomizerListViewModel;
@{
    Layout = "_Layout";
    ViewBag.Title = "Team Randomizer";
    ViewBag.Description = "Utilize the options in the dropdown menu to create a random Pokémon team!";
}

@section styles
{
    <link href="/css/teamRandomizer.css" rel="stylesheet" type="text/css" />
    <link href="/css/ajaxSpinner.css" rel="stylesheet" type="text/css" />
}

@section scripts
{
    <script src="/js/teamRandomizer.js"></script>
}

<div class="btn-group teamRandomizer gameSelector">
    <span>
        <button class="btn btn-primary generatorDropdown">Game Options</button>
    </span>
    <ul class="generatorDropdownMenu dropdown-menu">
        <section class="generatorSection">
            <span class="generationOptionTitle" id="games">Games</span>
            <li class="dropdown-item generatorOption gameRadioOption">
                <input id="game0" name="gameSelection" type="radio" value="0" checked="checked" />
                <label for="game0" class="generatorOptionTitle">Any Game</label>
            </li>
            @for (var i = 0; i < (int)Math.Ceiling(Model.AllGames.Count() / 2m); i++ )
            {
                <li class="dropdown-item generatorOption gameRadioOption">
                    <input id="game@(Model.AllGames[i].Id)" name="gameSelection" type="radio" value="@(Model.AllGames[i].Id)" />
                    <label for="game@(Model.AllGames[i].Id)" class="generatorOptionTitle">@Model.AllGames[i].Name</label>
                </li>
            }
        </section>
        <section class="generatorSection">
            @for (var i = (int)Math.Ceiling(Model.AllGames.Count() / 2m); i < Model.AllGames.Count(); i++ )
            {
                <li class="dropdown-item generatorOption gameRadioOption">
                    <input id="game@(Model.AllGames[i].Id)" name="gameSelection" type="radio" value="@(Model.AllGames[i].Id)" />
                    <label for="game@(Model.AllGames[i].Id)" class="generatorOptionTitle">@Model.AllGames[i].Name</label>
                </li>
            }
        </section>
    </ul>
</div>
<div class="btn-group teamRandomizer typeSelector">
    <span>
        <button class="btn btn-primary generatorDropdown">Type Options</button>
    </span>
    <ul class="generatorDropdownMenu dropdown-menu">
        <section class="generatorSection">
            <span class="generationOptionTitle" id="types">Types</span>
            <li class="dropdown-item generatorOption typeRadioOption">
                <input id="type0" name="typeSelection" type="radio" value="0" checked="checked" />
                <label for="type0" class="generatorOptionTitle">Any Type</label>
            </li>
            @for (var i = 0; i < (int)Math.Ceiling(Model.AllTypes.Count() / 2m); i++ )
            {
                <li class="dropdown-item generatorOption typeRadioOption">
                    <input id="type@(Model.AllTypes[i].Id)" name="typeSelection" type="radio" value="@(Model.AllTypes[i].Id)" />
                    <label for="type@(Model.AllTypes[i].Id)" class="generatorOptionTitle">@Model.AllTypes[i].Name</label>
                </li>
            }
        </section>
        <section class="generatorSection">
            @for (var i = (int)Math.Ceiling(Model.AllTypes.Count() / 2m); i < Model.AllTypes.Count(); i++ )
            {
                <li class="dropdown-item generatorOption typeRadioOption">
                    <input id="type@(Model.AllTypes[i].Id)" name="typeSelection" type="radio" value="@(Model.AllTypes[i].Id)" />
                    <label for="type@(Model.AllTypes[i].Id)" class="generatorOptionTitle">@Model.AllTypes[i].Name</label>
                </li>
            }
        </section>
    </ul>
</div>
<br>
<div class="btn-group teamRandomizer otherSelector">
    <span>
        <button class="btn btn-primary generatorDropdown">Other Options</button>
    </span>
    <ul class="generatorDropdownMenu dropdown-menu">
        <section class="generatorSection">
            <span class="generationOptionTitle" id="pokemonCount">Pokémon Count</span>
            <li class="dropdown-item generatorOption evolutionNumber">
                <input id="pokemonCount" name="pokemonCount" type="number" autocomplete="off" value="6" min="1" max="6" />
            </li>
            <span class="generationOptionTitle" id="generations">Generations</span>
            @foreach (var gen in Model.AllGames.Select(x => x.GenerationId).Distinct().ToList())
            {
                <li class="dropdown-item generatorOption generationCheckbox gen@(gen)Checkbox">
                    <input id="gen@(gen)" type="checkbox" value="@(gen)" checked="checked" />
                    <label for="gen@(gen)" class="generatorOptionTitle">Generation @gen</label>
                </li>
            }
        </section>
        <section class="generatorSection">
            <span class="generationOptionTitle" id="evolutions">Evolutions</span>
            <li class="dropdown-item generatorOption evolutionCheckbox">
                <input id="stage1Pokemon" type="checkbox" value="stage1Pokemon" checked="checked" />
                <label for="stage1Pokemon" class="generatorOptionTitle">Pre Evolution</label>
            </li>
            <li class="dropdown-item generatorOption evolutionCheckbox">
                <input id="stage2Pokemon" type="checkbox" value="middleEvolution" checked="checked" />
                <label for="stage2Pokemon" class="generatorOptionTitle">Middle Evolution</label>
            </li>
            <li class="dropdown-item generatorOption evolutionCheckbox">
                <input id="onlyFullyEvolved" type="checkbox" value="onlyFullyEvolved" checked="checked" />
                <label for="onlyFullyEvolved" class="generatorOptionTitle">Final Evolution</label>
            </li>
            <span class="generationOptionTitle" id="alternateForms">Alternate Forms</span>
            @foreach (var formGroup in Model.AllFormGroups)
            {
                <li class="dropdown-item generatorOption alternateFormCheckbox @(formGroup.Name.ToLower().Replace(" ", string.Empty))FormCheckbox">
                    <input id="@formGroup.Name.Replace(" ", string.Empty)" type="checkbox" value="@formGroup.Name" checked="checked" />
                    <label for="@formGroup.Name.Replace(" ", string.Empty)" class="generatorOptionTitle">@formGroup.Name Forms</label>
                </li>
            }
            <li class="dropdown-item generatorOption alternateFormCheckbox otherFormCheckbox">
                <input id="Other" type="checkbox" value="Other" checked="checked" />
                <label for="Other" class="generatorOptionTitle">Other Forms</label>
            </li>
        </section>
        <section class="generatorSection">
            <span class="generationOptionTitle" id=legendary>Legendaries</span>
            @foreach(var l in Model.AllLegendaryTypes)
            {
                <li class="dropdown-item generatorOption legendaryCheckbox">
                    <input id=@l.Type.Replace(" ", @String.Empty) type="checkbox" value=@l.Type.Replace(" ", @String.Empty) checked="checked" />
                    <label for=@l.Type.Replace(" ", @String.Empty) class="generatorOptionTitle">@(l.Type.Last() == 'y' ? @l.Type.Replace("y", "ies") : @l.Type += 's')</label>
                </li>
            }
            <span class="generationOptionTitle" id="otherOptions">Other Options</span>
            <li class="dropdown-item generatorOption otherOption randomAbilityCheckbox">
                <input id="randomAbilityBool" type="checkbox" value="randomAbilityBool" />
                <label for="randomAbilityBool" class="generatorOptionTitle">Show Random Ability</label>
            </li>
            <li class="dropdown-item generatorOption otherOption legendaryBoolCheckbox">
                <input id="legendaryBool" type="checkbox" value="legendaryBool" />
                <label for="legendaryBool" class="generatorOptionTitle">Only Show Legendaries</label>
            </li>
            <li class="dropdown-item generatorOption otherOption multipleMegaBoolCheckbox">
                <input id="multipleMegaBool" type="checkbox" value="multipleMegaBool" />
                <label for="multipleMegaBool" class="generatorOptionTitle">Show Multiple Megas</label>
            </li>
            <li class="dropdown-item generatorOption otherOption multipleGMaxBoolCheckbox">
                <input id="multipleGMaxBool" type="checkbox" value="multipleGMaxBool" />
                <label for="multipleGMaxBool" class="generatorOptionTitle">Show Multiple Gigantamax</label>
            </li>
            <li class="dropdown-item generatorOption otherOption altFormBoolCheckbox">
                <input id="altFormBool" type="checkbox" value="altFormBool" />
                <label for="altFormBool" class="generatorOptionTitle">Only Show Alternate Forms</label>
            </li>
            <li class="dropdown-item generatorOption otherOption onePokemonFormBoolCheckbox">
                <input id="onePokemonFormBool" type="checkbox" value="onePokemonFormBool" checked="checked" />
                <label for="onePokemonFormBool" class="generatorOptionTitle">Only One Form Per Pokémon</label>
            </li>
            <li class="dropdown-item generatorOption otherOption noRepeatTypeBoolCheckbox">
                <input id="noRepeatTypeBool" type="checkbox" value="noRepeatTypeBool" />
                <label for="noRepeatTypeBool" class="generatorOptionTitle">No Repeating Types</label>
            </li>
        </section>
    </ul>
</div>

<button class="btn btn-primary generatorButton">Randomize Team</button>

<div class="overlay">
    <div class="cv-spinner">
        <span class="spinner"></span>
    </div>
</div>

<div class="teamRandomizerResults">
</div>