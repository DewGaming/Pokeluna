@addTagHelper "*, Microsoft.AspNetCore.Mvc.TagHelpers"
@model Pokedex.Models.CreateTeamPokemonViewModel
@{
    Layout = "_layout";
    ViewBag.Title = "Create Pokémon";
}

@section styles
{
    <link href="/css/select2.css" rel="stylesheet" type="text/css" />
}

@section scripts
{
    <script src="/js/createPokemonTeamDetail.js"></script>
    <script>
        $(function() {
            $('#levelVal').text(@Model.Level);
            $('#happinessVal').text(@Model.Happiness);
            $('.levelSlider').val(@Model.Level);
            $('.happinessSlider').val(@Model.Happiness);
        });

        $('.levelSlider').on('input', function() {
            $('#levelVal').text($(this).val());
        });
        
        $('.happinessSlider').on('input', function() {
            $('#happinessVal').text($(this).val());
        });
    </script>
}

<h2>Add Pokémon</h2>

<div class="form-horizontal">

    @using (Html.BeginForm(FormMethod.Post, new { @enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        
        @Html.ValidationSummary()

        @Html.HiddenFor(x => x.GameId);

        <div class="form-group row">
            @Html.LabelFor(x => x.PokemonId, "Pokémon", new { @class = "col-md-2" })
            @Html.DropDownListFor(x => x.PokemonId, new SelectList(Model.AllPokemon, "Id", "Name"), string.Empty, new { @class = "form-control col-md-8" })
            @Html.ValidationMessageFor(x => x.PokemonId)
        </div>

        <div class="form-group row">
            @Html.LabelFor(x => x.Nickname, new { @class = "col-md-2" })
            @Html.EditorFor(x => x.Nickname, new { htmlAttributes = new { @autocomplete = "off", @class = "form-control col-md-8" }})
            @Html.ValidationMessageFor(x => x.Nickname)
        </div>
        
        @if (@Model.GameId != 1 && @Model.GameId != 21 && @Model.GameId != 20)
        {
            <div class="form-group row">
                @Html.LabelFor(x => x.Gender, new { @class = "col-md-2" })
                @Html.DropDownListFor(x => x.Gender, Enumerable.Empty<SelectListItem>(), new { @class = "form-control col-md-8" })
                @Html.ValidationMessageFor(x => x.Gender)
            </div>
    
            <div class="form-group row">
                @Html.LabelFor(x => x.IsShiny, "Is Pokémon Shiny", new { @class = "col-md-2" })
                @Html.CheckBoxFor(x => x.IsShiny, new { @class = "form-control col-md-8" })
                @Html.ValidationMessageFor(x => x.IsShiny)
            </div>
        }

        @if (@Model.GameId != 1 && @Model.GameId != 21 && @Model.GameId != 20 && @Model.GameId != 2 && @Model.GameId != 22 && @Model.GameId != 23 && @Model.GameId != 37)
        {
            <div class="form-group row">
                @Html.LabelFor(x => x.AbilityId, "Ability", new { @class = "col-md-2" })
                @Html.DropDownListFor(x => x.AbilityId, Enumerable.Empty<SelectListItem>(), string.Empty, new { @class = "form-control col-md-8" })
                @Html.ValidationMessageFor(x => x.AbilityId)
            </div>
        }

        @if (@Model.GameId != 1 && @Model.GameId != 21 && @Model.GameId != 20 && @Model.GameId != 2 && @Model.GameId != 22 && @Model.GameId != 23)
        {
            <div class="form-group row">
                @Html.LabelFor(x => x.NatureId, "Nature", new { @class = "col-md-2" })
                @Html.DropDownListFor(x => x.NatureId, new SelectList(Model.AllNatures, "Id", "Name"), new { @class = "form-control col-md-8" })
                @Html.ValidationMessageFor(x => x.NatureId)
            </div>
        }
        
        @if (@Model.GameId == 41 || @Model.GameId == 42)
        {
            <div class="form-group row">
                @Html.LabelFor(x => x.TeraTypeId, "Tera Type", new { @class = "col-md-2" })
                @Html.DropDownListFor(x => x.TeraTypeId, new SelectList(Model.AllTypes, "Id", "Name"), new { @class = "form-control col-md-8" })
                @Html.ValidationMessageFor(x => x.TeraTypeId)
            </div>
        }
        
        @if (@Model.GameId != 1 && @Model.GameId != 21 && @Model.GameId != 20)
        {
            <div class="form-group row">
                @Html.LabelFor(x => x.BattleItemId, "Held Item", new { @class = "col-md-2" })
                @Html.DropDownListFor(x => x.BattleItemId, Enumerable.Empty<SelectListItem>(), string.Empty, new { @class = "form-control col-md-8" })
                @Html.ValidationMessageFor(x => x.BattleItemId)
            </div>
        }

        <div class="form-group row">
            <label class="col-md-2" for="Level">Level: <span id="levelVal"></span></label>
            <input class="levelSlider slider col-md-8" data-val-required="The Level field is required." id="Level" name="Level" type="range" min="1" max="100" value="100">
            @Html.ValidationMessageFor(x => x.Level)
        </div>

        <div class="form-group row">
            <label class="col-md-2" for="Happiness">Happiness: <span id="happinessVal"></span></label>
            <input class="happinessSlider slider col-md-8" data-val-required="The Happiness field is required." id="Happiness" name="Happiness" type="range" min="0" max="255" value="255">
            @Html.ValidationMessageFor(x => x.Happiness)
        </div>

        <p>
            <button type="submit" class="btn btn-primary" role="button">Add</button>
        </p>
    }

</div>