@model Pokedex.Models.ShinyHuntsViewModel;
@using MoreLinq;
@using Pokedex.DataAccess.Models;
@using System.Collections.Generic;
@using System.Net;
@{
    ViewBag.Title = "Shiny Hunts";
    ViewBag.Description = "Keep track of all of you current and successful shiny hunts!";
    List<ShinyHunt> incompleteHunts = new List<ShinyHunt>();
    List<ShinyHunt> completeHunts = new List<ShinyHunt>();
    List<Game> uncapturedGames = new List<Game>();
    List<Game> capturedGames = new List<Game>();
    incompleteHunts = Model.AllShinyHunts.Where(x => !x.IsCaptured).ToList();
    completeHunts = Model.AllShinyHunts.Where(x => x.IsCaptured).ToList();
    uncapturedGames = @Model.EdittedGames.Where(x => incompleteHunts.DistinctBy(x => x.Game).Any(y => y.GameId == x.Id)).OrderBy(x => x.ReleaseDate).ThenBy(x => x.Id).ToList();
    capturedGames = @Model.EdittedGames.Where(x => completeHunts.DistinctBy(x => x.Game).Any(y => y.GameId == x.Id)).OrderBy(x => x.ReleaseDate).ThenBy(x => x.Id).ToList();
}

@section styles
{
    <link href="~/css/pageLookup.css" rel="stylesheet" asp-append-version="true" />
    <link href="~/css/shinyHunts.css" rel="stylesheet" asp-append-version="true" />
}

@section scripts
{
    <script src="~/js/pageLookup.js" asp-append-version="true"></script>
    <script src="~/js/shinyHunts.js" asp-append-version="true"></script>
}

<p class="shinyHuntButtons">
    <a class="btn btn-primary" href="@this.Url.Action("StartHunt", "ShinyHunt")" role="button">Start New Hunt</a>
    <button class="currentlyHuntingButton btn btn-primary hide" onclick="hideComplete()">View In-Progress Shiny Hunts</button>
    @if (completeHunts.Count > 0)
    {
        <button class="completedHuntsButton btn btn-primary" onclick="hideIncomplete()">View Successful Shiny Hunts</button>
    }
</p>

<div class="pageButtons uncapturedGamesList">
    <button class="gameButton pinnedHunts@(incompleteHunts.Count(x => x.IsPinned) > 0 ? " active" : " hide")" id="GamePin" onclick="lookupHuntsInGame(this, 'Pin')">Pinned Hunts</button>
    <button class="gameButton incompleteAllGames@(incompleteHunts.Count(x => x.IsPinned) > 0 ? "" : " active")" id="Game0" onload="lookupHuntsInGame(this, '0')" onclick="lookupHuntsInGame(this, '0')">All Games</button>
    @foreach (var g in uncapturedGames)
    {
        string gameColors = string.Concat(g.GameColor, " 50%, ");
        if (@Model.UnedittedGames.Where(x => x.ReleaseDate == g.ReleaseDate).Count() > 1 && g.Name != "Fire Red" && g.Name != "Leaf Green")
        {
            gameColors = string.Concat(gameColors, @Model.UnedittedGames.Where(x => x.ReleaseDate == g.ReleaseDate).ToList()[1].GameColor, " 50%)");
        }
        else
        {
            gameColors = string.Concat(gameColors, g.GameColor, " 50%)");
        }

        <button style="@(g.GameColor != string.Empty ? string.Concat("background: linear-gradient(135deg, ", gameColors) : string.Empty)" class="gameButton" id="Game@(g.Id)" onclick="lookupHuntsInGame(this, '@g.Id')">@g.Name</button>
    }
</div>

<div class="pageButtons capturedGamesList hide">
    <button class="gameButton completeAllGames active" id="Game0" onclick="lookupHuntsInGame(this, '0')">All Games</button>
    @foreach (var g in capturedGames)
    {
        string gameColors = string.Concat(g.GameColor, " 50%, ");
        if (@Model.UnedittedGames.Where(x => x.ReleaseDate == g.ReleaseDate).Count() > 1 && g.Name != "Fire Red" && g.Name != "Leaf Green")
        {
            gameColors = string.Concat(gameColors, @Model.UnedittedGames.Where(x => x.ReleaseDate == g.ReleaseDate).ToList()[1].GameColor, " 50%)");
        }
        else
        {
            gameColors = string.Concat(gameColors, g.GameColor, " 50%)");
        }

        <button style="@(g.GameColor != string.Empty ? string.Concat("background: linear-gradient(135deg, ", gameColors) : string.Empty)" class="gameButton" id="Game@(g.Id)" onclick="lookupHuntsInGame(this, '@g.Id')">@g.Name</button>
    }
</div>

@if (incompleteHunts.Count() > 0)
{
    <div class="page active generation pokemonList incompletedHunts">
        <div class="grid-container">
            @foreach (var s in incompleteHunts)
            {
                <div class="Hunt@(s.Id) HuntGame@(s.GameId)@(s.IsPinned ? " HuntGamePin" : "") shadowed @s.Pokemon.Name">
                    <div class="pokemonDetails">
                        @if (s.HasShinyCharm)
                        {
                            <img class="shinyCharm pokemonListPicture" title="Shiny Charm Used" src="@Url.Content(string.Concat(@Model.AppConfig.WebUrl, @Model.AppConfig.GeneralImageUrl, "shinyCharm.png"))">
                        }
                        <div class="pokemonImages">
                            <img class="pokemonListPicture pokemonShinyHuntPokemon" title="PokÃ©mon: @s.Pokemon.Name@((s.Nickname != null) ? string.Concat(" (", s.Nickname, ")") : "")" src="@Url.Content(string.Concat(@Model.AppConfig.WebUrl, @Model.AppConfig.ShinyPokemonImageUrl, s.Pokemon.Id, ".png"))" />
                        </div>
                        <div class="description">
                            <p onclick="togglePin('@s.Id')" class="pin@(s.IsPinned ? " hide" : "")">ðŸ“Œ</p>
                            <p onclick="togglePin('@s.Id')" class="pinned@(s.IsPinned ? "" : " hide")">ðŸ“Œ</p>
                            <p><b>@s.Pokemon.Name</b></p>
                            <p class="gameHuntedIn"><b>Game: </b>@s.Game.Name</p>
                            @if (@s.DuringCommunityDay)
                            {
                                <p><b>Hunting Method: </b>@s.HuntingMethod.Name (During Community Day)</p>
                            }
                            else
                            {
                                <p><b>Hunting Method: </b>@s.HuntingMethod.Name</p>
                            }
                            @if (@s.HuntingMethodId == 4 || @s.HuntingMethodId == 5 )
                            {
                                <p class="encounterP pointer" onclick="adjustEncountersManually('@s.Id')"><b>Eggs: </b><span class="encounters">@s.CurrentPhaseEncounters</span></p>
                            }
                            else
                            {
                                <p class="encounterP pointer" onclick="adjustEncountersManually('@s.Id')"><b>@(s.Phases > 1 ? "Current Phase " : "")Encounters: </b><span class="encounters">@s.CurrentPhaseEncounters</span></p>
                            }
                            <p class="phaseCounter pointer@(s.Phases > 1 ? "" : " hide")" onclick="adjustPhasesManually('@s.Id')"><b>Current Phase: </b><span class="phases">@s.Phases</span></p>
                        </div>
                    </div>
                    <div class="encounterButtons">
                        <button class="phaseIncrease btn orangeButton" onclick="incrementPhase('@s.Id')">Increase Phases</button>
                        <button class="encounterIncrease btn btn-primary" onclick="incrementEncounter('@s.Id')">Increase Encounters</button>
                    </div>
                    <hr class="buttonSeparator">
                    <div class="shinyFoundButtons">
                        <a class="shinyFound btn btn-success" href="@this.Url.Action("PhaseShinyFound", "ShinyHunt", new { shinyHuntId = @s.Id })" role="button">Phase Shiny Found</a>
                        <a class="shinyFound btn btn-success" href="@this.Url.Action("ShinyFound", "ShinyHunt", new { shinyHuntId = @s.Id })" role="button">Target Shiny Found</a>
                    </div>
                    <hr class="buttonSeparator">
                    <div class="huntUncapturedButtons">
                        <a class="btn orangeButton" href="@this.Url.Action("EditIncompleteShinyHunt", "ShinyHunt", new { shinyHuntId = @s.Id })" role="button">Modify Shiny Hunt</a>
                        <a class="btn btn-danger abandonHunt" href="@(this.Url.Action("DeleteShinyHunt", "ShinyHunt", new { shinyHuntId = @s.Id }))">Delete Hunt</a>
                    </div>
                </div>
            }
        </div>
    </div>
}

@if (completeHunts.Count > 0)
{
    <div class="page generation pokemonList completedHunts hide">
        <h5 class="pokemonCount">Total Shinies Found: <span class="shiniesFoundCount"></span></h5>
        <div class="grid-container">
            @foreach (var s in Model.AllShinyHunts.Where(x => x.IsCaptured).OrderBy(x => x.Pokemon.PokedexNumber).ThenBy(x => x.PokemonId).ThenBy(x => x.DateOfCapture).ThenBy(x => x.Id).ToList())
            {
                <div class="Hunt@(s.Id) HuntGame@(s.GameId) shadowed @s.Pokemon.Name@(s.Pokemon.IsComplete ? "" : " incomplete")">
                    <div class="pokemonDetails">
                        <div class="bonusImages">
                            @if (s.HasShinyCharm)
                            {
                                <img class="shinyCharm pokemonListPicture" title="Shiny Charm Used" src="@Url.Content(string.Concat(@Model.AppConfig.WebUrl, @Model.AppConfig.GeneralImageUrl, "shinyCharm.png"))">
                            }
                            @if (s.Mark != null)
                            {
                                <img class="pokemonMark pokemonListPicture" title="@s.Mark.Name" src="@Url.Content(string.Concat(@Model.AppConfig.WebUrl, @Model.AppConfig.OfficialMarkImageUrl, @s.Mark.Id, ".png"))">
                            }
                            @if (s.IsAlpha)
                            {
                                <img class="pokemonAlpha pokemonListPicture" title="Alpha" src="@Url.Content(string.Concat(@Model.AppConfig.WebUrl, @Model.AppConfig.OfficialMarkImageUrl, "alpha.png"))">
                            }
                            @if (s.Pokeball != null)
                            {
                                <img class="pokeball pokemonListPicture" title="@s.Pokeball.Name" src="@Url.Content(string.Concat(@Model.AppConfig.WebUrl, @Model.AppConfig.OfficialPokeballImageUrl, @s.Pokeball.Id, ".png"))">
                            }
                        </div>
                        <div class="pokemonImages">
                            <img class="pokemonListPicture pokemonShinyHuntPokemon" title="PokÃ©mon: @s.Pokemon.Name@((s.Nickname != null) ? string.Concat(" (", s.Nickname, ")") : "")" src="@Url.Content(string.Concat(@Model.AppConfig.WebUrl, @Model.AppConfig.ShinyPokemonImageUrl, s.Pokemon.Id, ".png"))" />
                        </div>
                        <div class="description">
                            <p>
                                <b>@s.Pokemon.Name</b>
                                @if (s.Nickname != null)
                                {
                                    @string.Concat(" (", s.Nickname, ")")
                                }
                            </p>
                            <p class="gameHuntedIn"><b>Game: </b>@s.Game.Name</p>
                            @if (@s.DuringCommunityDay)
                            {
                                <p><b>Hunting Method: </b>@s.HuntingMethod.Name (During Community Day)</p>
                            }
                            else
                            {
                                <p><b>Hunting Method: </b>@s.HuntingMethod.Name</p>
                            }
                            @if (@s.TotalEncounters > 0)
                            {
                                @if (@s.CurrentPhaseEncounters > 0 && @s.CurrentPhaseEncounters != @s.TotalEncounters)
                                {
                                    if (@s.HuntingMethodId == 4 || @s.HuntingMethodId == 5)
                                    {
                                        <p><b>Last Phase Eggs: </b>@s.CurrentPhaseEncounters</p>
                                    }
                                    else
                                    {
                                        <p><b>Last Phase Encounters: </b>@s.CurrentPhaseEncounters</p>
                                    }
                                }

                                if (@s.HuntingMethodId == 4 || @s.HuntingMethodId == 5 )
                                {
                                    <p><b>Total Eggs: </b>@s.TotalEncounters</p>
                                }
                                else
                                {
                                    <p><b>Total Encounters: </b>@s.TotalEncounters</p>
                                }
                            }
                            @if (@s.Phases > 1)
                            {
                                <p><b>Total Phases: </b>@s.Phases</p>
                            }
                            <p><b>Date of Capture: </b>@s.DateOfCapture.ToString("MMMM d, yyyy")</p>
                            @if (@s.SparklingPowerLevel > 0)
                            {
                                <p><b>Sparkling Power Level: </b>@s.SparklingPowerLevel</p>
                            }
                            @if (@s.PhaseOfHunt != null)
                            {
                                <p><b>Found While Hunting: </b>@s.PhaseOfHunt.Pokemon.Name</p>
                            }
                        </div>
                    </div>
                    <div class="huntCapturedButtons">
                        <a class="btn orangeButton" href="@this.Url.Action("EditCompleteShinyHunt", "ShinyHunt", new { shinyHuntId = @s.Id })" role="button">Modify Shiny</a>
                        <a class="btn btn-danger abandonHunt" href="@(this.Url.Action("DeleteShinyHunt", "ShinyHunt", new { shinyHuntId = @s.Id }))">Delete Hunt</a>
                    </div>
                </div>
            }
        </div>
    </div>
}

@if (Model.AllShinyHunts.Count() == 0)
{
    <div class="noShinyHunts">No hunts have been started yet.</div>
}