@model Pokedex.Models.PokemonTeamsViewModel;
@{
    Layout = "_Layout";
    ViewBag.Title = "Pokémon Teams";
    int teamCount = 0;
    int pokemonCount;
}

@section styles
{
    <style>
        .pokemonTeamGroup {
            margin-right: 10px;
        }
    </style>
}

@section scripts
{
    <script src="/js/pokemonTeam.js"></script>
}

<p class="teamButtons">
    <a class="btn btn-primary" href="@this.Url.Action("CreateTeam", "PokemonTeam")" role="button">Create New Team</a>
    <a class="btn btn-primary" href="@this.Url.Action("ImportTeams", "PokemonTeam")" role="button">Import Teams</a>
    @if (Model.AllPokemonTeams.ToList().Count > 0)
    {
        <a class="btn btn-primary" href="@this.Url.Action("DeleteTeams", "PokemonTeam")" role="button">Delete Teams</a>
    }
    <button class="pokemonTeamsButton btn btn-primary hide">Export All Teams</button>
</p>

<div>
    @if (Model.AllPokemonTeams.ToList().Count > 0)
    {
        <table class="table pokemonTeam">
            <tbody>
                @for(var i = 0; i < Model.AllPokemonTeams.Count; i++)
                {
                    <tr>
                        <th scope="col">Team Name</th>
                        @if (Model.AllPokemonTeams.Where(x => x.Game != null).Count() > 0)
                        {
                            <th scope="col">
                                Game@{
                                    foreach (var team in Model.AllPokemonTeams)
                                    {
                                        if (team.Game != null && team.Game.Name.Contains('/'))
                                        {
                                            @("(s)");
                                            break;
                                        }
                                    }
                                }
                            </th>
                        }
                        <th scope="col">Actions</th>
                    </tr>
                    teamCount++;
                    pokemonCount = 0;
                    <tr>
                        <td>@Model.AllPokemonTeams[i].PokemonTeamName</td>
                        @if (Model.AllPokemonTeams.Where(x => x.Game != null).Count() > 0)
                        {
                            <td>
                                @if (@Model.AllPokemonTeams[i].Game != null)
                                {
                                    @Model.AllPokemonTeams[i].Game.Name
                                }
                                else
                                {
                                    @("No Game Selected");
                                }
                            </td>
                        }
                        <td>
                            <a class="teamButton btn btn-primary" title="Edit @Model.AllPokemonTeams[i].PokemonTeamName" href="@this.Url.Action("EditTeam", "PokemonTeam", new { pokemonTeamId = teamCount })">Edit Team</a>
                            @if (@Model.AllPokemonTeams[i].FirstPokemon != null)
                            {
                                <button id="@Model.AllPokemonTeams[i].Id" class="pokemonTeamButton teamButton btn btn-primary" title="Export @Model.AllPokemonTeams[i].PokemonTeamName">Export Team</button>
                            }
                            <a class="teamButton btn btn-primary" title="Delete @Model.AllPokemonTeams[i].PokemonTeamName" href="@this.Url.Action("DeleteTeam", "PokemonTeam", new { pokemonTeamId = teamCount })">Delete Team</a>
                        </td>
                    </tr>
                    <tr>
                        <th scope="col">Pokémon</th>
                        <td colspan="2">
                            <table class="pokemonTeamPokemonTable">
                                <tbody>
                                    <tr>
                                        <td>
                                            @foreach (var p in @Model.AllPokemonTeams[i].GrabPokemonTeamDetails)
                                            {
                                                pokemonCount++;
                                                <div class="pokemonTeamGroup">
                                                    <a class="dropdown-toggle pokemonTeamDropdownButton" data-toggle="dropdown">
                                                        <span class="pokemonTeamPicture">
                                                            <img class="lightshadowed pokemonTeamPokemon" title="Pokémon: @p.Pokemon.Name@((@p.Nickname != null) ? string.Concat(" (", @p.Nickname, ")") : "")
Ability: @p.Ability.Name
@((@p.BattleItemId != null) ? string.Concat("Held Item: ", @p.BattleItem.Name) : "")" src="@Url.Content(string.Concat(@Model.AppConfig.WebUrl, p.IsShiny ? @Model.AppConfig.ShinyPokemonImageUrl : @Model.AppConfig.PokemonImageUrl, @p.Pokemon.Id, ".png"))" />
                                                        </span>
                                                    </a>
                                                    <ul class="pokemonTeamDropdown dropdown-menu dropdown-menu-right">
                                                        <span class="adminMenuTitle">View</span>
                                                        <li><a class="dropdown-item" href="@(this.Url.Action("Pokemon", "Home", new { name = p.Pokemon.Name.Replace(": ", "_").Replace(' ', '_').ToLower() }))" target="_blank">View Pokémon Data</a></li>
                                                        <hr class="adminOptionSeparator">
                                                        <span class="adminMenuTitle">Update</span>
                                                        <li><a class="dropdown-item" href="@(this.Url.Action("EditPokemon", "PokemonTeam", new { pokemonTeamId = teamCount, pokemonTeamDetailId = pokemonCount }))">Update Pokémon</a></li>
                                                        <li><a class="dropdown-item" href="@(this.Url.Action("EditEV", "PokemonTeam", new { pokemonTeamId = teamCount, pokemonTeamDetailId = pokemonCount }))">Update EVs</a></li>
                                                        <li><a class="dropdown-item" href="@(this.Url.Action("EditIV", "PokemonTeam", new { pokemonTeamId = teamCount, pokemonTeamDetailId = pokemonCount }))">Update IVs</a></li>
                                                        <li><a class="dropdown-item" href="@(this.Url.Action("EditMoveset", "PokemonTeam", new { pokemonTeamId = teamCount, pokemonTeamDetailId = pokemonCount }))">Update Moveset</a></li>
                                                        <hr class="adminOptionSeparator">
                                                        <span class="adminMenuTitle">Delete</span>
                                                        <li><a class="dropdown-item" href="@(this.Url.Action("DeletePokemon", "PokemonTeam", new { pokemonTeamId = teamCount, pokemonTeamDetailId = pokemonCount }))">Delete Pokémon</a></li>
                                                    </ul>
                                                </div>
                                            }
                                            @if (@Model.AllPokemonTeams[i].GrabPokemonTeamDetails.Count < 6)
                                            {
                                                <a href="@this.Url.Action("CreatePokemon", "PokemonTeam", new { pokemonTeamId = teamCount })">
                                                    <img class="lightshadowed addButton" title="Add Pokémon" src="@Url.Content(string.Concat(@Model.AppConfig.WebUrl, "/images/general/addButton.png"))" />
                                                </a>
                                            }
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <div class="noPokemonTeams">No teams have been created yet.</div>
    }
</div>