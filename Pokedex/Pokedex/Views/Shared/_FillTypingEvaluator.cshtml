@using Pokedex.DataAccess.Models;
@model Pokedex.Models.TypingEvaluatorViewModel;
@{
    List<PokemonTypeDetail> typing = Model.AllPokemonWithTypes;
}

@for(var i = 0; i < typing.Count(); i++)
{
    <div class="shadowed @typing[i].Pokemon.Name@(typing[i].Pokemon.IsComplete ? string.Empty : " incomplete")">
        <a href="@this.Url.Action("PokemonWithId", "Home", new { pokemonName = typing[i].Pokemon.Name.Replace(": ", "_").Replace(' ', '_').ToLower(), pokemonId = Model.AllPokemon[i].Id, generationId = Model.Game.GenerationId })">
            <img class="pokemonListPicture" title="@Model.AllPokemon[i].Name" src=@string.Concat(Model.AppConfig.WebUrl, Model.AppConfig.OfficialPokemonImageUrl, typing[i].PokemonId, ".png")>
        </a>
        <div>
            <a class="pokemonName" href="@this.Url.Action("PokemonWithId", "Home", new { pokemonName = typing[i].Pokemon.Name.Replace(": ", "_").Replace(' ', '_').ToLower(), pokemonId = Model.AllPokemon[i].Id, generationId = Model.Game.GenerationId })">@('#')@Model.AllPokemon[i].PokedexNumber.ToString().PadLeft(4, '0') @Model.AllPokemon[i].Name</a>
        </div>
    </div>
}