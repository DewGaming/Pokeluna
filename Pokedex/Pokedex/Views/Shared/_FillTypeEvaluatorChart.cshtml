@model Pokedex.Models.TypeEffectivenessViewModel;
@{
    string style = string.Empty;
}
@if (@Model.StrongAgainst.Count > 0 || @Model.SuperStrongAgainst.Count() > 0)
{
    <div class="StrongAgainst">
        <h2>Resistances</h2>
        <table class="typing-table-strong typing-table">
            <tbody>
                @if (@Model.SuperStrongAgainst.Count() > 0)
                {
                    <tr>
                        <td>
                            <b>Quad Resist</b>
                        </td>
                    </tr>
                    @for (var i = 0; i < @Model.SuperStrongAgainst.Count(); i += 2)
                    {
                        <tr>
                            <td>
                                <img loading="lazy" class="pokemon-type type-icon" src="@Url.Content(string.Concat(@Model.AppConfig.WebUrl, @Model.AppConfig.TypeImageUrl, @Model.SuperStrongAgainst[i].ToLower().Substring(0, @Model.SuperStrongAgainst[i].IndexOf(" Quad")).ToLower(), ".png"))">
                                @if (@Model.SuperStrongAgainst.ElementAtOrDefault(i+1) != null)
                                {
                                <img loading="lazy" class="pokemon-type type-icon" src="@Url.Content(string.Concat(@Model.AppConfig.WebUrl, @Model.AppConfig.TypeImageUrl, @Model.SuperStrongAgainst[i+1].ToLower().Substring(0, @Model.SuperStrongAgainst[i+1].IndexOf(" Quad")).ToLower(), ".png"))">
                                }
                            </td>
                        </tr>
                    }
                    if (@Model.StrongAgainst.Count > 0)
                    {
                        <tr>
                            <td>
                                <b>Regular Resist</b>
                            </td>
                        </tr>
                    }
                }
                @for (var i = 0; i < @Model.StrongAgainst.Count(); i += 2)
                {
                    <tr>
                        <td>
                            <img loading="lazy" class="pokemon-type type-icon" src="@Url.Content(string.Concat(@Model.AppConfig.WebUrl, @Model.AppConfig.TypeImageUrl, @Model.StrongAgainst[i].ToLower(), ".png"))">
                            @if (@Model.StrongAgainst.ElementAtOrDefault(i+1) != null)
                            {
                            <img loading="lazy" class="pokemon-type type-icon" src="@Url.Content(string.Concat(@Model.AppConfig.WebUrl, @Model.AppConfig.TypeImageUrl, @Model.StrongAgainst[i+1].ToLower(), ".png"))">
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}
else
{
    style = "display: flex;";
}
<div class="nonResistances" style="@style">
    @if (@Model.WeakAgainst.Count > 0 || @Model.SuperWeakAgainst.Count() > 0)
    {
        <div class="WeakAgainst">
            <h2>Weaknesses</h2>
            <table class="typing-table-weak typing-table">
                <tbody>
                @if (@Model.SuperWeakAgainst.Count() > 0)
                {
                    <tr>
                        <td>
                            <b>Quad Weak</b>
                        </td>
                    </tr>
                    @for (var i = 0; i < @Model.SuperWeakAgainst.Count(); i += 2)
                    {
                        <tr>
                            <td>
                                <img loading="lazy" class="pokemon-type type-icon" src="@Url.Content(string.Concat(@Model.AppConfig.WebUrl, @Model.AppConfig.TypeImageUrl, @Model.SuperWeakAgainst[i].ToLower().Substring(0, @Model.SuperWeakAgainst[i].IndexOf(" Quad")).ToLower(), ".png"))">
                                @if (@Model.SuperWeakAgainst.ElementAtOrDefault(i+1) != null)
                                {
                                <img loading="lazy" class="pokemon-type type-icon" src="@Url.Content(string.Concat(@Model.AppConfig.WebUrl, @Model.AppConfig.TypeImageUrl, @Model.SuperWeakAgainst[i+1].ToLower().Substring(0, @Model.SuperWeakAgainst[i+1].IndexOf(" Quad")).ToLower(), ".png"))">
                                }
                            </td>
                        </tr>
                    }
                    if (@Model.WeakAgainst.Count > 0)
                    {
                        <tr>
                            <td>
                                <b>Regular Weakness</b>
                            </td>
                        </tr>
                    }
                }
                @for (var i = 0; i < @Model.WeakAgainst.Count(); i += 2)
                {
                    <tr>
                        <td>
                            <img loading="lazy" class="pokemon-type type-icon" src="@Url.Content(string.Concat(@Model.AppConfig.WebUrl, @Model.AppConfig.TypeImageUrl, @Model.WeakAgainst[i].ToLower(), ".png"))">
                            @if (@Model.WeakAgainst.ElementAtOrDefault(i+1) != null)
                            {
                            <img loading="lazy" class="pokemon-type type-icon" src="@Url.Content(string.Concat(@Model.AppConfig.WebUrl, @Model.AppConfig.TypeImageUrl, @Model.WeakAgainst[i+1].ToLower(), ".png"))">
                            }
                        </td>
                    </tr>
                }
                </tbody>
            </table>
        </div>
    }
    @if (@Model.ImmuneTo.Count > 0)
    {
        <div class="ImmuneTo">
            <h2>Immunities</h2>
            <table class="typing-table-immune typing-table">
                <tbody>
                @for (var i = 0; i < @Model.ImmuneTo.Count(); i += 2)
                {
                    <tr>
                        <td>
                            <img loading="lazy" class="pokemon-type type-icon" src="@Url.Content(string.Concat(@Model.AppConfig.WebUrl, @Model.AppConfig.TypeImageUrl, @Model.ImmuneTo[i].ToLower(), ".png"))">
                            @if (@Model.ImmuneTo.ElementAtOrDefault(i+1) != null)
                            {
                            <img loading="lazy" class="pokemon-type type-icon" src="@Url.Content(string.Concat(@Model.AppConfig.WebUrl, @Model.AppConfig.TypeImageUrl, @Model.ImmuneTo[i+1].ToLower(), ".png"))">
                            }
                        </td>
                    </tr>
                }
                </tbody>
            </table>
        </div>
    }
</div>