@using Pokedex.DataAccess.Models;
@model Pokedex.Models.PokemonViewModel
@{
    Evolution preEvolution = null;
    if (Model.PreEvolutions.Count() > 0)
    {
        preEvolution = Model.PreEvolutions.Find(x => x.GenerationId == Model.Pokemon.Game.GenerationId);
    }

    ViewBag.Title = string.Concat("Review ", @Model.Pokemon.Name);
}

@section styles
{
    <link href="~/css/typeChart.css" rel="stylesheet" asp-append-version="true" />
    <link href="~/css/pageLookup.css" rel="stylesheet" asp-append-version="true" />
    <link href="~/css/pokemonPage.css" rel="stylesheet" asp-append-version="true" />
    <link class="tabIcon" rel="icon" type="image/png" href="@Url.Content(string.Concat(@Model.AppConfig.WebUrl, @Model.AppConfig.IconImageUrl, @Model.Pokemon.Id, ".png"))" />
    <style>
        .pokemonEvos p {
            margin-bottom: 0;
        }
    </style>
}

@section scripts
{
    <script src="~/js/calculateCaptureRate.js" asp-append-version="true"></script>
}

<p class="adminButtons">
    @using (Html.BeginForm())
    {
        @Html.HiddenFor(x => x.Pokemon.Id)
        <button type="submit" class="btn btn-primary" role="button">Finish Review</button>
        <a href="@this.Url.Action("CompletePokemon", "Owner", new { pokemonId = @Model.Pokemon.Id })" class="btn btn-primary">Mark Pokémon As Complete</a>
    }
</p>

<hr>

<div class="pokemon page active" id="@Model.Pokemon.Name.Replace("%", "").Replace("'", "").Replace("(", "").Replace(")", "").Replace(" ", "")@(@Model.Form != null ? @Model.Form.Name.Replace(" ", "") : "")">
    <div class="pokemonInfo pokemonPicture pokemonTables">
        @if (Model.OriginalPokemon != null)
        {
            <div style="display: flex">
                <div class="differentForms">
                    <h2 class="formHeader">Original</h2>
                    <div class="formButtons">
                        <div class="@Model.Pokemon.Name">
                            <img class="lightshadowed" title="@Model.OriginalPokemon.Name" loading="lazy" src="@Url.Content(string.Concat(@Model.AppConfig.WebUrl, @Model.AppConfig.IconImageUrl, @Model.OriginalPokemon.Id, ".png"))" />
                        </div>
                    </div>
                </div>
                <div class="shadowed pokemonWithForms">
                    <div class="pokemonImage">
                        <img title="@Model.Pokemon.Name@(@Model.Form != null ? string.Concat(" (", @Model.Form.Name, ")") : string.Empty)" loading="lazy" src="@Url.Content(string.Concat(@Model.AppConfig.WebUrl, @Model.AppConfig.OfficialPokemonImageUrl, @Model.Pokemon.Id, ".png"))" />
                    </div>
                </div>
            </div>
        }
        else
        {
            <div class="shadowed pokemonWithForms">
                <div class="pokemonImage">
                    <img title="@Model.Pokemon.Name@(@Model.Form != null ? string.Concat(" (", @Model.Form.Name, ")") : string.Empty)" loading="lazy" src="@Url.Content(string.Concat(@Model.AppConfig.WebUrl, @Model.AppConfig.OfficialPokemonImageUrl, @Model.Pokemon.Id, ".png"))" />
                </div>
            </div>
        }
    </div>
    <div class="pokemonInfo pokemonData pokemonTables">
        <h2>Pokémon Details</h2>
        <table class="pokedexNumber">
            <tbody>
                <tr>
                    <th>Pokémon Name</th>
                    <td>
                        @if (Model.Form != null)
                        {
                            @(string.Concat(Model.Pokemon.Name, " (", Model.Form.Name, ")"))
                        }
                        else
                        {
                            @(Model.Pokemon.Name)
                        }
                    </td>
                </tr>
                <tr>
                    <th>Pokedex Number</th>
                    <td>@('#')@Model.Pokemon.PokedexNumber.ToString().PadLeft(4, '0')</td>
                </tr>
                <tr>
                    <th>Classification</th>
                    <td>@Model.Pokemon.Classification.Name</td>
                </tr>
                <tr>
                    <th>Height</th>
                    <td>
                        @{
                            var feet = 0;
                            var inches = (int)Math.Round((@Model.Pokemon.Height / 0.0254m), 0);
                            while(inches >= 12)
                            {
                                feet++;
                                inches -= 12;
                            }
                        }
                        @feet@("'")@inches.ToString("D2")@('"') (@Model.Pokemon.Height.ToString("0.####") m)
                    </td>
                </tr>
                <tr>
                    <th>Weight</th>
                    <td>
                        @(Math.Round(@Model.Pokemon.Weight * (decimal)2.2046226, 1).ToString("0.####")) lbs
                        (@Model.Pokemon.Weight.ToString("0.####") kg)
                    </td>
                </tr>
                <tr>
                    <th>
                        @if (Model.Abilities.OrderByDescending(x => x.GenerationId).First().SecondaryAbility == null && Model.Abilities.OrderByDescending(x => x.GenerationId).First().HiddenAbility == null)
                        {
                            @("Ability")
                        }
                        else
                        {
                            @("Abilities")
                        }
                    </th>
                    <td>
                        <span title="Description: @Model.Abilities.OrderByDescending(x => x.GenerationId).First().PrimaryAbility.Description">
                            @Model.Abilities.OrderByDescending(x => x.GenerationId).First().PrimaryAbility.Name
                        </span>
                        @if (@Model.Abilities.OrderByDescending(x => x.GenerationId).First().SecondaryAbility != null)
                        {
                            <br>
                            <span title="Description: @Model.Abilities.OrderByDescending(x => x.GenerationId).First().SecondaryAbility.Description">
                                @Model.Abilities.OrderByDescending(x => x.GenerationId).First().SecondaryAbility.Name
                            </span>
                        }
                        @if (@Model.Abilities.OrderByDescending(x => x.GenerationId).First().HiddenAbility != null)
                        {
                            <br>
                            <span title="Description: @Model.Abilities.OrderByDescending(x => x.GenerationId).First().HiddenAbility.Description">
                                @Model.Abilities.OrderByDescending(x => x.GenerationId).First().HiddenAbility.Name (Hidden)
                            </span>
                        }
                    </td>
                </tr>
                <tr>
                    <th>
                        @if (Model.Pokemon.Game.Name.IndexOf('/') > -1)
                        {
                            @("Games of Origin");
                        }
                        else
                        {
                            @("Game of Origin");
                        }
                    </th>
                    <td>
                        @if (Model.Pokemon.GameId == 43)
                        {
                            @("Pokémon GO");
                        }
                        else
                        {
                            @String.Join(" / ", Model.GamesAvailableIn.Where(x => x.ReleaseDate == Model.Pokemon.Game.ReleaseDate).Select(x => x.Name))
                        }
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
    <div class="pokemonInfo pokemonTraining pokemonTables">
        <h2>More Pokémon Details</h2>
        <table>
            <tbody>
                <tr>
                    <th>EV Yield</th>
                    <td>
                        @if (Model.EVYields.OrderByDescending(x => x.GenerationId).First().Health != 0)
                        {
                            @Model.EVYields.OrderByDescending(x => x.GenerationId).First().Health@(" Health");
                            <br>
                        }
                        @if (Model.EVYields.OrderByDescending(x => x.GenerationId).First().Attack != 0)
                        {
                            @Model.EVYields.OrderByDescending(x => x.GenerationId).First().Attack@(" Attack");
                            <br>
                        }
                        @if (Model.EVYields.OrderByDescending(x => x.GenerationId).First().Defense != 0)
                        {
                            @Model.EVYields.OrderByDescending(x => x.GenerationId).First().Defense@(" Defense");
                            <br>
                        }
                        @if (Model.EVYields.OrderByDescending(x => x.GenerationId).First().SpecialAttack != 0)
                        {
                            @Model.EVYields.OrderByDescending(x => x.GenerationId).First().SpecialAttack@(" Sp. Attack");
                            <br>
                        }
                        @if (Model.EVYields.OrderByDescending(x => x.GenerationId).First().SpecialDefense != 0)
                        {
                            @Model.EVYields.OrderByDescending(x => x.GenerationId).First().SpecialDefense@(" Sp. Defense");
                            <br>
                        }
                        @if (Model.EVYields.OrderByDescending(x => x.GenerationId).First().Speed != 0)
                        {
                            @Model.EVYields.OrderByDescending(x => x.GenerationId).First().Speed@(" Speed");
                            <br>
                        }
                    </td>
                </tr>
                <tr>
                    <th>Catch Rate</th>
                    <td class="catchRate">@Model.CaptureRates.Last(x => x.PokemonId == @Model.Pokemon.Id).CaptureRate.CatchRate</td>
                </tr>
                <tr>
                    <th>Experience Growth</th>
                    <td>
                        @Model.Pokemon.ExperienceGrowth.Name
                        <br>
                        (@Model.Pokemon.ExperienceGrowth.ExpPointTotal XP)
                    </td>
                </tr>
                <tr>
                    <th>Base Happiness</th>
                    <td>@Model.BaseHappinesses.Last(x => x.PokemonId == @Model.Pokemon.Id).BaseHappiness.Happiness</td>
                </tr>
                <tr>
                    <th>Gender Ratio</th>
                    <td>
                        @if (Model.Pokemon.GenderRatio.MaleRatio == 0 && Model.Pokemon.GenderRatio.FemaleRatio == 0)
                        {
                            @("Gender Unknown");
                        }
                        else
                        {
                            if (Model.Pokemon.GenderRatio.FemaleRatio == 0)
                            {
                                <span class="maleRatio">@Model.Pokemon.GenderRatio.MaleRatio@("% Male")</span>;
                            }
                            else if (Model.Pokemon.GenderRatio.MaleRatio == 0)
                            {
                                <span class="femaleRatio">@Model.Pokemon.GenderRatio.FemaleRatio@("% Female")</span>;
                            }
                            else
                            {
                                <span class="maleRatio">@Model.Pokemon.GenderRatio.MaleRatio@("% Male")</span>
                                @("/")
                                <span class="femaleRatio">@Model.Pokemon.GenderRatio.FemaleRatio@("% Female")</span>;
                            }
                        }
                    </td>
                </tr>
                <tr>
                    @if (Model.EggGroups.OrderByDescending(x => x.GenerationId).First().SecondaryEggGroup != null)
                    {
                        <th>Egg Groups</th>
                    }
                    else
                    {
                        <th>Egg Group</th>
                    }
                    <td>
                        @Model.EggGroups.OrderByDescending(x => x.GenerationId).First().PrimaryEggGroup.Name
                        @if (Model.EggGroups.OrderByDescending(x => x.GenerationId).First().SecondaryEggGroup != null)
                        {
                            <br>
                            @Model.EggGroups.OrderByDescending(x => x.GenerationId).First().SecondaryEggGroup.Name
                        }
                    </td>
                </tr>
                <tr>
                   <th>Egg Cycles</th>
                   <td>
                       @Model.Pokemon.EggCycle.CycleCount Cycles
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
    <div class="pokemonInfo typing pokemonTables">
        <div class="pokemonInfo pokemonTypingTable pokemonTables">
            <div class="typingChart">
                <div class="typing">
                    <h2>Typing</h2>
                    <table>
                        <tr>
                            <td>
                                <img class="pokemon-type type-icon" loading="lazy" src="@Url.Content(string.Concat(@Model.AppConfig.WebUrl, @Model.AppConfig.TypeImageUrl, @Model.Typings.OrderByDescending(x => x.GenerationId).First().PrimaryType.Name.ToLower(), ".png"))">
                                @if (@Model.Typings.OrderByDescending(x => x.GenerationId).First().SecondaryType != null)
                                {
                                    <img class="pokemon-type type-icon" loading="lazy" src="@Url.Content(string.Concat(@Model.AppConfig.WebUrl, @Model.AppConfig.TypeImageUrl, @Model.Typings.OrderByDescending(x => x.GenerationId).First().SecondaryType.Name.ToLower(), ".png"))">
                                }
                            </td>
                        </tr>
                    </table>
                </div>
            </div>
        </div>
    </div>
    <div class="pokemonInfo pokemonStats pokemonTables">
        <h2>Base Stats</h2>
        <table class="baseStatTable">
            <tbody>
                <tr>
                    <th class="Health" scope="col">Health</th>
                    <td class="statData"><div class="health statBar" style="width: @(@Model.BaseStats.OrderByDescending(x => x.GenerationId).First().Health * 100 / 255m)%;"></div></td>
                    <td class="Health">@Model.BaseStats.OrderByDescending(x => x.GenerationId).First().Health</td>
                </tr>
                <tr>
                    <th class="Attack" scope="col">Attack</th>
                    <td class="statData"><div class="attack statBar" style="width: @(@Model.BaseStats.OrderByDescending(x => x.GenerationId).First().Attack * 100 / 255m)%;"></div></td>
                    <td class="Attack">@Model.BaseStats.OrderByDescending(x => x.GenerationId).First().Attack</td>
                </tr>
                <tr>
                    <th class="Defense" scope="col">Defense</th>
                    <td class="statData"><div class="defense statBar" style="width: @(@Model.BaseStats.OrderByDescending(x => x.GenerationId).First().Defense * 100 / 255m)%;"></div></td>
                    <td class="Defense">@Model.BaseStats.OrderByDescending(x => x.GenerationId).First().Defense</td>
                </tr>
                <tr>
                    <th class="SpecialAttack" scope="col">Sp. Attack</th>
                    <td class="statData"><div class="specialAttack statBar" style="width: @(@Model.BaseStats.OrderByDescending(x => x.GenerationId).First().SpecialAttack * 100 / 255m)%;"></div></td>
                    <td class="SpecialAttack">@Model.BaseStats.OrderByDescending(x => x.GenerationId).First().SpecialAttack</td>
                </tr>
                <tr>
                    <th class="SpecialDefense" scope="col">Sp. Defense</th>
                    <td class="statData"><div class="specialDefense statBar" style="width: @(@Model.BaseStats.OrderByDescending(x => x.GenerationId).First().SpecialDefense * 100 / 255m)%;"></div></td>
                    <td class="SpecialDefense">@Model.BaseStats.OrderByDescending(x => x.GenerationId).First().SpecialDefense</td>
                </tr>
                <tr>
                    <th class="Speed" scope="col">Speed</th>
                    <td class="statData"><div class="speed statBar" style="width: @(@Model.BaseStats.OrderByDescending(x => x.GenerationId).First().Speed * 100 / 255m)%;"></div></td>
                    <td class="Speed">@Model.BaseStats.OrderByDescending(x => x.GenerationId).First().Speed</td>
                </tr>
            </tbody>
            <tfoot>
                <tr>
                    <th class="baseStatTotal" scope="col">Total</th>
                    <td colspan="2" class="baseStatTotal"><b>@Model.BaseStats.OrderByDescending(x => x.GenerationId).First().StatTotal</b></td>
                </tr>
            </tfoot>
        </table>
    </div>
    @if (Model.PreEvolutions.Count() > 0)
    {
        <div class="pokemonInfo pokemonEvos pokemonTables">
            <div class="evolutions">
                <h2>
                    @if (Model.PreEvolutions.Count() > 1)
                    {
                        @("Pre-Evolutions");
                    }
                    else
                    {
                        @("Pre-Evolution");
                    }
                </h2>
                <table class="preEvolutionTable">
                    <tbody class="evolutionPokemon">
                        <tr>
                            <th>
                                <img class="lightshadowed" loading="lazy" title="@preEvolution.PreevolutionPokemon.Name" src="@Url.Content(string.Concat(@Model.AppConfig.WebUrl, @Model.AppConfig.IconImageUrl, @preEvolution.PreevolutionPokemon.Id, ".png"))" />
                            </th>
                            <td>
                                <p class="evolutionLink">@preEvolution.PreevolutionPokemon.Name - @preEvolution.EvolutionMethod.Name</p>
                                @if (preEvolution.EvolutionDetails != null)
                                {
                                    <p>@preEvolution.EvolutionDetails</p>
                                }
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    }
    @if (Model.Evolutions.Count() > 0)
    {
        <div class="pokemonInfo pokemonEvos pokemonTables evolutions">
            <h2>
                @if (Model.Evolutions.Count() > 1 || (Model.Pokemon.PokedexNumber == 412 && Model.Pokemon.Id != 610))
                {
                    @("Evolutions");
                }
                else
                {
                    @("Evolution");
                }
            </h2>
            <table class="evolutionTable">
                @{
                    List<Evolution> evolutionList = Model.Evolutions.OrderBy(x => x.EvolutionPokemon.PokedexNumber).ThenBy(x => x.EvolutionPokemon.Id).ToList();
                }
                @if (Model.Evolutions.Count() > 0)
                {
                    <tbody class="evolutionPokemon">
                        @foreach (var evolution in evolutionList)
                        {
                            <tr>
                                <th>
                                    <img class="lightshadowed" loading="lazy" title="@evolution.EvolutionPokemon.Name" src="@Url.Content(string.Concat(@Model.AppConfig.WebUrl, @Model.AppConfig.IconImageUrl, @evolution.EvolutionPokemon.Id, ".png"))" />
                                </th>
                                <td>
                                    <p class="evolutionLink">@evolution.EvolutionPokemon.Name - @evolution.EvolutionMethod.Name</p>
                                    @if (evolution.EvolutionDetails != null)
                                    {
                                        <p>@evolution.EvolutionDetails</p>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                }
            </table>
        </div>
    }
</div>