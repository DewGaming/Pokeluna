@model Pokedex.Models.StartShinyHuntViewModel
@{
    ViewBag.Title = "Start Shiny Hunt";
}

@section styles
{
    <link href="~/css/ajaxSpinner.css" rel="stylesheet" asp-append-version="true" />
    <link href="~/css/shinyHunts.css" rel="stylesheet" asp-append-version="true" />
    <link href="~/css/select2.css" rel="stylesheet" asp-append-version="true" />
    <style>
        @@media (min-width: 576px) {
            .pokemonShinyImage {
                width: 40% !important;
                height: 40% !important;
                max-width: 125px !important;
                max-height: 125px !important;
                margin: 10px;
            }
        }
        @@media (max-width: 575px) {
            .shinyHuntImages {
                display: none !important;
            }
        }

        @@media (min-width: 576px) {
            .shadowed {
                min-width: auto !important;
            }
        }

        .shinyHuntImages {
            display: flex;
            flex-flow: row wrap;
        }
    </style>
}

@section scripts
{
    <script src="~/js/modifyShinyHunt.js" asp-append-version="true"></script>
}

<h2>Start Shiny Hunt</h2>

<div class="startShinyHunt">
    <div class="form-horizontal">
        @using (Html.BeginForm(FormMethod.Post, new { @enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()

            @Html.ValidationSummary()

            @Html.Hidden(@Model.AppConfig.WebUrl, string.Empty, new { @class = "webUrl" })
            @Html.Hidden(@Model.AppConfig.ShinyPokemonImageUrl, string.Empty, new { @class = "shinyUrl" })
            @Html.Hidden(@Model.AppConfig.OfficialPokemonImageUrl, string.Empty, new { @class = "officialUrl" })
            @Html.HiddenFor(x => x.UserId)

            <div class="form-group row">
                @Html.LabelFor(x => x.PokemonIds, "PokÃ©mon Hunting", new { @class = "col-md-4" })
                @Html.DropDownListFor(x => x.PokemonIds, new SelectList(Model.AllPokemon, "Id", "Name"), new { @class = "form-control col-md-6" })
                @Html.ValidationMessageFor(x => x.PokemonIds)
            </div>

            <div class="form-group row hide">
                @Html.LabelFor(x => x.GameId, new { @class = "col-md-4" })
                @Html.DropDownListFor(x => x.GameId, Enumerable.Empty<SelectListItem>(), new { @class = "form-control col-md-6" })
                @Html.ValidationMessageFor(x => x.GameId)
            </div>

            <div class="form-group row hide">
                @Html.LabelFor(x => x.HuntingMethodId, new { @class = "col-md-4" })
                @Html.DropDownListFor(x => x.HuntingMethodId, Enumerable.Empty<SelectListItem>(), new { @class = "form-control col-md-6" })
                @Html.ValidationMessageFor(x => x.HuntingMethodId)
            </div>

            <div class="form-group row hide">
                @Html.LabelFor(x => x.PokeballId, "Preferred Pokeball", new { @class = "col-md-4" })
                @Html.DropDownListFor(x => x.PokeballId, Enumerable.Empty<SelectListItem>(), new { @class = "form-control col-md-6 preferredPokeball" })
                @Html.ValidationMessageFor(x => x.PokeballId)
            </div>

            <div class="form-group row gameSpecific marks hide">
                @Html.LabelFor(x => x.MarkId, "Preferred Mark", new { @class = "col-md-4" })
                @Html.DropDownListFor(x => x.MarkId, Enumerable.Empty<SelectListItem>(), new { @class = "form-control col-md-6 preferredMark" })
                @Html.ValidationMessageFor(x => x.MarkId)
            </div>

            <div class="form-group row gameSpecific sparklingPower hide">
                @Html.LabelFor(x => x.SparklingPowerLevel, new { @class = "col-md-4" })
                @Html.EditorFor(x => x.SparklingPowerLevel, new { htmlAttributes = new { @autocomplete = "off", @class = "form-control col-md-6", @min="0", @max="3", @value="0" } })
                @Html.ValidationMessageFor(x => x.SparklingPowerLevel)
            </div>

            <div class="form-group row gameSpecific lureCheckbox hide">
                @Html.LabelFor(x => x.UsingLures, new { @class = "col-md-4" })
                @Html.EditorFor(x => x.UsingLures, new { @class = "form-control col-md-6" })
                @Html.ValidationMessageFor(x => x.UsingLures)
            </div>

            <div class="form-group row gameSpecific shinyCharmCheckbox hide">
                @Html.LabelFor(x => x.HasShinyCharm, new { @class = "col-md-4" })
                @Html.EditorFor(x => x.HasShinyCharm, new { @class = "form-control col-md-6" })
                @Html.ValidationMessageFor(x => x.HasShinyCharm)
            </div>

            <div class="form-group row hide">
                @Html.LabelFor(x => x.IsPinned, "Pin Hunt Immediately", new { @class = "col-md-4" })
                @Html.EditorFor(x => x.IsPinned, new { @class = "form-control col-md-6" })
                @Html.ValidationMessageFor(x => x.IsPinned)
            </div>

            <p class="submitButtons">
                <button type="submit" class="btn btn-primary addShinyHunt" role="button">Add</button>
            </p>
        }
    </div>
    <div class="shinyHuntImages">
    </div>
</div>

<div class="overlay">
    <div class="cv-spinner">
        <span class="spinner"></span>
    </div>
</div>