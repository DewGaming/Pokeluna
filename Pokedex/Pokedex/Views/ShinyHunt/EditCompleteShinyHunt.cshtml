@addTagHelper "*, Microsoft.AspNetCore.Mvc.TagHelpers"
@model Pokedex.Models.EditShinyHuntViewModel
@{
    Layout = "_layout";
    ViewBag.Title = "Edit Shiny Hunt";
}

@section styles
{
    <link href="/css/ajaxSpinner.css" rel="stylesheet" type="text/css" />
    <link href="/css/shinyHunts.css" rel="stylesheet" type="text/css" />
}

@section scripts
{
    <script src="/js/modifyShinyHunt.js"></script>
}

<h2>Edit Shiny Hunt</h2>

<div class="editShinyHunt">
    <div class="form-horizontal">
        @using (Html.BeginForm(FormMethod.Post, new { @enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()

            @Html.ValidationSummary()

            @Html.Hidden(@Model.AppConfig.WebUrl, string.Empty, new { @class = "webUrl" })
            @Html.Hidden(@Model.AppConfig.ShinyPokemonImageUrl, string.Empty, new { @class = "shinyUrl" })
            @Html.Hidden(@Model.AppConfig.OfficialPokemonImageUrl, string.Empty, new { @class = "officialUrl" })
            @Html.HiddenFor(x => x.Id)
            @Html.HiddenFor(x => x.UserId)
            @Html.HiddenFor(x => x.IsCaptured)

            <div class="form-group row">
                @Html.LabelFor(x => x.GameId, "Game", new { @class = "col-md-4" })
                @Html.DropDownListFor(x => x.GameId, new SelectList(Model.AllGames, "Id", "Name"), string.Empty, new { @class = "form-control col-md-6" })
                @Html.ValidationMessageFor(x => x.GameId)
            </div>

            <div class="form-group row hide">
                @Html.LabelFor(x => x.PokemonId, "Pokemon", new { @class = "col-md-4" })
                @Html.DropDownListFor(x => x.PokemonId, new SelectList(Model.AllPokemon, "Id", "Name"), new { @class = "form-control col-md-6" })
                @Html.ValidationMessageFor(x => x.PokemonId)
            </div>
                
            <div class="form-group row">
                @Html.LabelFor(x => x.Nickname, "Nickname", new { @class = "col-md-4" })
                @Html.EditorFor(x => x.Nickname, new { htmlAttributes = new { @autocomplete = "off", @class = "form-control col-md-6" } })
                @Html.ValidationMessageFor(x => x.Nickname)
            </div>

            <div class="form-group row">
                @Html.LabelFor(x => x.Encounters, "Encounters", new { @class = "col-md-4" })
                @Html.EditorFor(x => x.Encounters, new { htmlAttributes = new { @autocomplete = "off", @class = "form-control col-md-6", @min="0", } })
                @Html.ValidationMessageFor(x => x.Encounters)
            </div>

            <div class="form-group row">
                @Html.LabelFor(x => x.DateOfCapture, "Date of Capture", new { @class = "col-md-4" })
                @Html.EditorFor(x => x.DateOfCapture, new { @class = "form-control col-md-6" })
                @Html.ValidationMessageFor(x => x.DateOfCapture)
            </div>

            <div class="form-group row hide">
                @Html.LabelFor(x => x.HuntingMethodId, "Shiny Hunting Method", new { @class = "col-md-4" })
                @Html.DropDownListFor(x => x.HuntingMethodId, new SelectList(Model.AllHuntingMethods, "Id", "Name"), new { @class = "form-control col-md-6" })
                @Html.ValidationMessageFor(x => x.HuntingMethodId)
            </div>

            <div class="form-group row">
                @Html.LabelFor(x => x.PokeballId, "Pokeball", new { @class = "col-md-4" })
                @Html.DropDownListFor(x => x.PokeballId, new SelectList(Model.AllPokeballs, "Id", "Name"), string.Empty, new { @class = "form-control col-md-6" })
                @Html.ValidationMessageFor(x => x.PokeballId)
            </div>

            <div class="form-group row">
                @Html.LabelFor(x => x.Gender, "Gender", new { @class = "col-md-4" })
                @Html.DropDownListFor(x => x.Gender, new SelectList(Model.AllGenders), new { @class = "form-control col-md-6" })
                @Html.ValidationMessageFor(x => x.Gender)
            </div>

            @if ((@Model.GameId == 41 || @Model.GameId == 42) && @Model.HuntingMethodId != 4 && @Model.HuntingMethodId != 5)
            {
                <div class="form-group row">
                    @Html.LabelFor(x => x.SparklingPowerLevel, "Sparkling Sandwich Power Level", new { @class = "col-md-4" })
                    @Html.EditorFor(x => x.SparklingPowerLevel, new { htmlAttributes = new { @autocomplete = "off", @class = "form-control col-md-6", @min="0", @max="3", @value="0" } })
                    @Html.ValidationMessageFor(x => x.SparklingPowerLevel)
                </div>
            }

            @if (@Model.GameHuntedIn.GenerationId >= 8 && @Model.GameId != 35 && @Model.GameId != 36 && @Model.GameId != 37 && @Model.HuntingMethodId != 4 && @Model.HuntingMethodId != 5)
            {
                <div class="form-group row">
                    @Html.LabelFor(x => x.MarkId, "Mark", new { @class = "col-md-4" })
                    @Html.DropDownListFor(x => x.MarkId, new SelectList(Model.AllMarks, "Id", "Name"), string.Empty, new { @class = "form-control col-md-6" })
                    @Html.ValidationMessageFor(x => x.MarkId)
                </div>
            }

            <div class="form-group row gameSpecific shinyCharmCheckbox hide">
                @Html.LabelFor(x => x.HasShinyCharm, "Have the Shiny Charm", new { @class = "col-md-4" })
                @Html.EditorFor(x => x.HasShinyCharm, new { @class = "form-control col-md-6" })
                @Html.ValidationMessageFor(x => x.HasShinyCharm)
            </div>

            <p>
                <button type="submit" class="btn btn-primary" role="button">Save Changes</button>
            </p>
        }
    </div>
    <div>
        <img class="shadowed pokemonShinyImage hide"/>
    </div>
</div>

<div class="overlay">
    <div class="cv-spinner">
        <span class="spinner"></span>
    </div>
</div>