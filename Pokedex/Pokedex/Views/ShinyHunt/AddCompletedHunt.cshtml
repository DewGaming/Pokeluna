@model Pokedex.Models.AddCompletedShinyHuntViewModel
@{
    ViewBag.Title = "Start Shiny Hunt";
}

@section styles
{
    <link href="~/css/ajaxSpinner.css" rel="stylesheet" asp-append-version="true" />
    <link href="~/css/shinyHunts.css" rel="stylesheet" asp-append-version="true" />
    <link href="~/css/select2.css" rel="stylesheet" asp-append-version="true" />
}

@section scripts
{
    <script src="~/js/modifyShinyHunt.js" asp-append-version="true"></script>
}

<h2>Add Completed Shiny Hunt</h2>

<div class="addCompleteShinyHunt completeShinyHunt">
    <div class="form-horizontal">
        @using (Html.BeginForm(FormMethod.Post, new { @enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()

            @Html.ValidationSummary()

            @Html.Hidden(@Model.AppConfig.WebUrl, string.Empty, new { @class = "webUrl" })
            @Html.Hidden(@Model.AppConfig.ShinyPokemonImageUrl, string.Empty, new { @class = "shinyUrl" })
            @Html.Hidden(@Model.AppConfig.OfficialPokemonImageUrl, string.Empty, new { @class = "officialUrl" })
            @Html.HiddenFor(x => x.UserId)
            @Html.HiddenFor(x => x.IncrementAmount)

            <div class="form-group row">
                @Html.LabelFor(x => x.PokemonId, new { @class = "col-md-4" })
                @Html.DropDownListFor(x => x.PokemonId, new SelectList(Model.AllPokemon, "Id", "Name"), "Select Pokemon", new { @class = "form-control col-md-6" })
                @Html.ValidationMessageFor(x => x.PokemonId)
            </div>

            <div class="form-group row hide">
                @Html.LabelFor(x => x.GameId, new { @class = "col-md-4" })
                @Html.DropDownListFor(x => x.GameId, Enumerable.Empty<SelectListItem>(), new { @class = "form-control col-md-6" })
                @Html.ValidationMessageFor(x => x.GameId)
            </div>
            
            <div class="form-group row hide">
                @Html.LabelFor(x => x.CurrentPhaseEncounters, new { @class = "col-md-4" })
                @Html.EditorFor(x => x.CurrentPhaseEncounters, new { htmlAttributes = new { @autocomplete = "off", @class = "form-control col-md-6" } })
                @Html.ValidationMessageFor(x => x.CurrentPhaseEncounters)
            </div>
                
            <div class="form-group row hide">
                @Html.LabelFor(x => x.Nickname, "Nickname", new { @class = "col-md-4" })
                @Html.EditorFor(x => x.Nickname, new { htmlAttributes = new { @autocomplete = "off", @class = "form-control col-md-6", @min="0", @max="3", @value="0" } })
                @Html.ValidationMessageFor(x => x.Nickname)
            </div>

            <div class="form-group row hide">
                @Html.LabelFor(x => x.DateOfCapture, "Date of Encounter", new { @class = "col-md-4" })
                @Html.EditorFor(x => x.DateOfCapture, new { htmlAttributes = new { @class = "form-control col-md-6" } })
                @Html.ValidationMessageFor(x => x.DateOfCapture)
            </div>

            <div class="form-group row hide">
                @Html.LabelFor(x => x.HuntingMethodId, new { @class = "col-md-4" })
                @Html.DropDownListFor(x => x.HuntingMethodId, Enumerable.Empty<SelectListItem>(), "Random Encounter", new { @class = "form-control col-md-6" })
                @Html.ValidationMessageFor(x => x.HuntingMethodId)
            </div>

            <div class="form-group row hide">
                @Html.LabelFor(x => x.PokeballId, "Pokeball", new { @class = "col-md-4" })
                @Html.DropDownListFor(x => x.PokeballId, Enumerable.Empty<SelectListItem>(), "No Specified Pokeball", new { @class = "form-control col-md-6" })
                @Html.ValidationMessageFor(x => x.PokeballId)
            </div>

            <div class="form-group row gameSpecific marks hide">
                @Html.LabelFor(x => x.MarkId, "Mark", new { @class = "col-md-4" })
                @Html.DropDownListFor(x => x.MarkId, Enumerable.Empty<SelectListItem>(), "No Mark", new { @class = "form-control col-md-6" })
                @Html.ValidationMessageFor(x => x.MarkId)
            </div>

            <div class="form-group row hide">
                @Html.LabelFor(x => x.Gender, "Gender", new { @class = "col-md-4" })
                @Html.DropDownListFor(x => x.Gender, Enumerable.Empty<SelectListItem>(), new { @class = "form-control col-md-6" })
                @Html.ValidationMessageFor(x => x.Gender)
            </div>

            <div class="form-group row pokemonSpecific sweets hide">
                @Html.LabelFor(x => x.SweetId, "Alcremie Sweet", new { @class = "col-md-4" })
                @Html.DropDownListFor(x => x.SweetId, Enumerable.Empty<SelectListItem>(), new { @class = "form-control col-md-6" })
                @Html.ValidationMessageFor(x => x.Sweet)
            </div>

            <div class="form-group row gameSpecific sparklingPower hide">
                @Html.LabelFor(x => x.SparklingPowerLevel, new { @class = "col-md-4" })
                @Html.EditorFor(x => x.SparklingPowerLevel, new { htmlAttributes = new { @autocomplete = "off", @class = "form-control col-md-6", @min="0", @max="3", @value="0" } })
                @Html.ValidationMessageFor(x => x.SparklingPowerLevel)
            </div>

            <div class="form-group row gameSpecific shinyCharmCheckbox hide">
                @Html.LabelFor(x => x.HasShinyCharm, new { @class = "col-md-4" })
                @Html.EditorFor(x => x.HasShinyCharm, new { @class = "form-control col-md-6" })
                @Html.ValidationMessageFor(x => x.HasShinyCharm)
            </div>

            <div class="form-group row hide">
                @Html.LabelFor(x => x.ExcludeFromShinyDex, new { @class = "col-md-4" })
                @Html.EditorFor(x => x.ExcludeFromShinyDex, new { @class = "form-control col-md-6" })
                @Html.ValidationMessageFor(x => x.ExcludeFromShinyDex)
            </div>

            <div class="form-group row gameSpecific lureCheckbox hide">
                @Html.LabelFor(x => x.UsingLures, new { @class = "col-md-4" })
                @Html.EditorFor(x => x.UsingLures, new { @class = "form-control col-md-6" })
                @Html.ValidationMessageFor(x => x.UsingLures)
            </div>

            <div class="form-group row gameSpecific alphaCheckbox hide">
                @Html.LabelFor(x => x.IsAlpha, "Found as Alpha", new { @class = "col-md-4" })
                @Html.EditorFor(x => x.IsAlpha, new { @class = "form-control col-md-6" })
                @Html.ValidationMessageFor(x => x.IsAlpha)
            </div>

            <p class="submitButtons">
                <button type="submit" name="numberOfHunts" value="oneHunt" class="btn btn-primary" role="button">Add</button>
                <button type="submit" name="numberOfHunts" value="multipleHunts" class="btn btn-primary" role="button">Add and Add Another Hunt</button>
            </p>
        }
    </div>
    <div>
        <img loading="lazy" alt="Shiny Pokemon Image" class="shadowed pokemonShinyImage hide"/>
    </div>
</div>

<div class="overlay">
    <div class="cv-spinner">
        <span class="spinner"></span>
    </div>
</div>